{"ast":null,"code":"import * as TYPE from \"../Const/Types\";\nvar initialState;\nvar local = localStorage.getItem(\"Tasks\") !== \"undefined\" ? JSON.parse(localStorage.getItem(\"Tasks\")) : [];\n\nif (local !== null) {\n  const lowCount = local.filter(task => {\n    return task.level === 1;\n  }).length;\n  const mediumCount = local.filter(task => {\n    return task.level === 2;\n  }).length;\n  const hightCount = local.filter(task => {\n    return task.level === 3;\n  }).length;\n  initialState = [{\n    name: \"Low Task\",\n    value: lowCount\n  }, {\n    name: \"Medium Task\",\n    value: mediumCount\n  }, {\n    name: \"High Task\",\n    value: hightCount\n  }];\n} else {\n  initialState = [];\n}\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case TYPE.UPDATE_CHART:\n      var local = JSON.parse(localStorage.getItem(\"Tasks\"));\n      const lowCount = local.filter(task => {\n        return task.level === 1;\n      }).length;\n      const mediumCount = local.filter(task => {\n        return task.level === 2;\n      }).length;\n      const hightCount = local.filter(task => {\n        return task.level === 3;\n      }).length;\n      return state = [{\n        name: \"Low Task\",\n        value: lowCount\n      }, {\n        name: \"Medium Task\",\n        value: mediumCount\n      }, {\n        name: \"High Task\",\n        value: hightCount\n      }];\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Reducer/ChartData.js"],"names":["TYPE","initialState","local","localStorage","getItem","JSON","parse","lowCount","filter","task","level","length","mediumCount","hightCount","name","value","state","action","type","UPDATE_CHART"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,gBAAtB;AACA,IAAIC,YAAJ;AACA,IAAIC,KAAK,GACLC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,WAAlC,GACMC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADN,GAEM,EAHV;;AAIA,IAAIF,KAAK,KAAK,IAAd,EAAoB;AAChB,QAAMK,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACpC,WAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,GAFgB,EAEdC,MAFH;AAGA,QAAMC,WAAW,GAAGV,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACvC,WAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,GAFmB,EAEjBC,MAFH;AAGA,QAAME,UAAU,GAAGX,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACtC,WAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,GAFkB,EAEhBC,MAFH;AAGAV,EAAAA,YAAY,GAAG,CACX;AAAEa,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,KAAK,EAAER;AAA3B,GADW,EAEX;AAAEO,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,KAAK,EAAEH;AAA9B,GAFW,EAGX;AAAEE,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,KAAK,EAAEF;AAA5B,GAHW,CAAf;AAKH,CAfD,MAeO;AACHZ,EAAAA,YAAY,GAAG,EAAf;AACH;;AAED,gBAAe,CAACe,KAAK,GAAGf,YAAT,EAAuBgB,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,IAAI,CAACmB,YAAV;AACI,UAAIjB,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,YAAMG,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACpC,eAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,OAFgB,EAEdC,MAFH;AAGA,YAAMC,WAAW,GAAGV,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACvC,eAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,OAFmB,EAEjBC,MAFH;AAGA,YAAME,UAAU,GAAGX,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACtC,eAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,OAFkB,EAEhBC,MAFH;AAGA,aAAQK,KAAK,GAAG,CACZ;AAAEF,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAER;AAA3B,OADY,EAEZ;AAAEO,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,KAAK,EAAEH;AAA9B,OAFY,EAGZ;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAEF;AAA5B,OAHY,CAAhB;;AAMJ;AACI,aAAOG,KAAP;AAnBR;AAqBH,CAtBD","sourcesContent":["import * as TYPE from \"../Const/Types\";\r\nvar initialState;\r\nvar local =\r\n    localStorage.getItem(\"Tasks\") !== \"undefined\"\r\n        ? JSON.parse(localStorage.getItem(\"Tasks\"))\r\n        : [];\r\nif (local !== null) {\r\n    const lowCount = local.filter((task) => {\r\n        return task.level === 1;\r\n    }).length;\r\n    const mediumCount = local.filter((task) => {\r\n        return task.level === 2;\r\n    }).length;\r\n    const hightCount = local.filter((task) => {\r\n        return task.level === 3;\r\n    }).length;\r\n    initialState = [\r\n        { name: \"Low Task\", value: lowCount },\r\n        { name: \"Medium Task\", value: mediumCount },\r\n        { name: \"High Task\", value: hightCount },\r\n    ];\r\n} else {\r\n    initialState = [];\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPE.UPDATE_CHART:\r\n            var local = JSON.parse(localStorage.getItem(\"Tasks\"));\r\n            const lowCount = local.filter((task) => {\r\n                return task.level === 1;\r\n            }).length;\r\n            const mediumCount = local.filter((task) => {\r\n                return task.level === 2;\r\n            }).length;\r\n            const hightCount = local.filter((task) => {\r\n                return task.level === 3;\r\n            }).length;\r\n            return (state = [\r\n                { name: \"Low Task\", value: lowCount },\r\n                { name: \"Medium Task\", value: mediumCount },\r\n                { name: \"High Task\", value: hightCount },\r\n            ]);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
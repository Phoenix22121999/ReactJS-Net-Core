{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\EditForm.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport * as Action from \"../Actions/index\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\"; // import { SubmissionError } from \"redux-form\";\n\nclass EditForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderText = ({\n      input,\n      meta,\n      type,\n      placeholder\n    }) => {\n      console.log(input.value);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      })), \" \", meta.error && /*#__PURE__*/React.createElement(Badge, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 32\n        }\n      }, meta.error));\n    };\n\n    this.renderSelect = ({\n      input,\n      meta,\n      type,\n      placeholder,\n      defaultValue\n    }) => {\n      console.log(input.value);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        as: \"select\",\n        custom: true\n      }, input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: 0 // style={{ background: \"black\", color: \"white\" }}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, \"Choose Priority\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"High\")), meta.error && /*#__PURE__*/React.createElement(Badge, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 32\n        }\n      }, meta.error));\n    };\n  }\n\n  level(level) {\n    switch (level) {\n      case 1:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"light\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }\n        }, \"Low\");\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 24\n          }\n        }, \"Medium\");\n\n      case 3:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 24\n          }\n        }, \"High\");\n\n      default:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 24\n          }\n        }, \"No Level\");\n    }\n  }\n\n  render() {\n    // console.log(this.props.handleSubmit);\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, this.props.index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: 3,\n      className: \"td\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.handleSubmit,\n      className: \"container-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \"Old Name: \", this.props.task.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      id: this.props.task.id,\n      className: \"form-control\",\n      name: \"Name\",\n      component: this.renderText // component=\"input\"\n      // type=\"text\"\n      ,\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, \"Old Level:\", \" \", this.level(this.props.task.level)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"Level\",\n      id: this.props.task.id // component=\"select\"\n      ,\n      component: this.renderSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-form text-center  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      \"aria-label\": \"Basic example\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        this.props.onClose();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({// initialValues: state.EditTask,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleEdit: () => {\n      dispatch(Action.toggleEdit());\n    }\n  };\n};\n\nconst validate = values => {\n  // console.log(initialValues);\n  const error = {};\n\n  if (!values.name) {\n    error.name = \"Required\";\n  }\n\n  if (!values.level || values.level === \"0\") {\n    error.level = \"Required\";\n  }\n\n  return error;\n};\n\nEditForm = reduxForm({// a unique name for the form\n  // initialValues: { name: \"\", level: 0 },\n  // validate,\n})(EditForm);\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/EditForm.js"],"names":["React","Component","Field","reduxForm","Action","Badge","Form","ButtonGroup","Button","connect","EditForm","renderText","input","meta","type","placeholder","console","log","value","error","renderSelect","defaultValue","level","render","props","index","handleSubmit","task","name","id","width","height","onClose","mapStateToProps","state","mapDispatchToProps","dispatch","toggleEdit","validate","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport * as Action from \"../Actions/index\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\n// import { SubmissionError } from \"redux-form\";\r\n\r\nclass EditForm extends Component {\r\n    renderText = ({ input, meta, type, placeholder }) => {\r\n        console.log(input.value);\r\n        return (\r\n            <div>\r\n                <Form.Control {...input}></Form.Control>{\" \"}\r\n                {meta.error && <Badge variant=\"primary\">{meta.error}</Badge>}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderSelect = ({ input, meta, type, placeholder, defaultValue }) => {\r\n        console.log(input.value);\r\n        return (\r\n            <div>\r\n                <Form.Control as=\"select\" custom {...input}>\r\n                    <option\r\n                        value={0}\r\n                        // style={{ background: \"black\", color: \"white\" }}\r\n                    >\r\n                        Choose Priority\r\n                    </option>\r\n                    <option value={1}>Low</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>High</option>\r\n                </Form.Control>\r\n                {meta.error && <Badge variant=\"primary\">{meta.error}</Badge>}\r\n            </div>\r\n        );\r\n    };\r\n    level(level) {\r\n        switch (level) {\r\n            case 1:\r\n                return <Badge variant=\"light\">Low</Badge>;\r\n            case 2:\r\n                return <Badge variant=\"info\">Medium</Badge>;\r\n            case 3:\r\n                return <Badge variant=\"danger\">High</Badge>;\r\n            default:\r\n                return <Badge variant=\"primary\">No Level</Badge>;\r\n        }\r\n    }\r\n    render() {\r\n        // console.log(this.props.handleSubmit);\r\n        return (\r\n            <tr>\r\n                <td className=\"text-center\">{this.props.index + 1}</td>\r\n                <td colSpan={3} className=\"td\">\r\n                    <div>\r\n                        <Form\r\n                            onSubmit={this.props.handleSubmit}\r\n                            className=\"container-form\"\r\n                        >\r\n                            {/* <div className=\"container\"> */}\r\n                            <div className=\"name\">\r\n                                <h6>Old Name: {this.props.task.name}</h6>\r\n                                <div>\r\n                                    <Field\r\n                                        id={this.props.task.id}\r\n                                        className=\"form-control\"\r\n                                        name=\"Name\"\r\n                                        component={this.renderText}\r\n                                        // component=\"input\"\r\n                                        // type=\"text\"\r\n                                        placeholder=\"First Name\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"level\">\r\n                                <h6>\r\n                                    Old Level:{\" \"}\r\n                                    {this.level(this.props.task.level)}\r\n                                </h6>\r\n\r\n                                <div>\r\n                                    <Field\r\n                                        name=\"Level\"\r\n                                        id={this.props.task.id}\r\n                                        // component=\"select\"\r\n                                        component={this.renderSelect}\r\n                                    ></Field>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"action\">\r\n                                <div className=\"button-form text-center  \">\r\n                                    <ButtonGroup\r\n                                        aria-label=\"Basic example\"\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            height: \"100%\",\r\n                                        }}\r\n                                    >\r\n                                        <Button variant=\"warning\" type=\"submit\">\r\n                                            Done\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            onClick={() => {\r\n                                                this.props.onClose();\r\n                                            }}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        {/* <Button variant=\"secondary\">Right</Button> */}\r\n                                    </ButtonGroup>\r\n                                </div>\r\n                            </div>\r\n                            {/* </div> */}\r\n                        </Form>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    // initialValues: state.EditTask,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleEdit: () => {\r\n            dispatch(Action.toggleEdit());\r\n        },\r\n    };\r\n};\r\n\r\nconst validate = (values) => {\r\n    // console.log(initialValues);\r\n    const error = {};\r\n    if (!values.name) {\r\n        error.name = \"Required\";\r\n    }\r\n    if (!values.level || values.level === \"0\") {\r\n        error.level = \"Required\";\r\n    }\r\n    return error;\r\n};\r\n\r\nEditForm = reduxForm({\r\n    // a unique name for the form\r\n    // initialValues: { name: \"\", level: 0 },\r\n    // validate,\r\n})(EditForm);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);\r\n"]},"metadata":{},"sourceType":"module"}
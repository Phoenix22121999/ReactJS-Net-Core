{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\ShowChartButton.js\";\nimport React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"../Actions/index\";\n\nfunction ShowChartButton(props) {\n  var btn = null;\n\n  if (props.toggleChart) {\n    btn = /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        props.Toggle();\n      },\n      variant: \"info\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, \"Show Chart\");\n  } else btn = /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      props.Toggle();\n    },\n    variant: \"info\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Close Chart\");\n\n  return /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    xs: 3,\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, btn);\n}\n\nconst mapStateToProps = state => ({\n  toggleChart: state.ToggleChart\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Toggle: () => {\n      dispatch(Action.toggleChart());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowChartButton);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/ShowChartButton.js"],"names":["React","Col","Button","connect","Action","ShowChartButton","props","btn","toggleChart","Toggle","mapStateToProps","state","ToggleChart","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,MAAIC,GAAG,GAAG,IAAV;;AACA,MAAID,KAAK,CAACE,WAAV,EAAuB;AACnBD,IAAAA,GAAG,gBACC,oBAAC,MAAD;AACI,MAAA,OAAO,EAAE,MAAM;AACXD,QAAAA,KAAK,CAACG,MAAN;AACH,OAHL;AAII,MAAA,OAAO,EAAC,MAJZ;AAKI,MAAA,KAAK,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ;AAWH,GAZD,MAaIF,GAAG,gBACC,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACXD,MAAAA,KAAK,CAACG,MAAN;AACH,KAHL;AAII,IAAA,OAAO,EAAC,MAJZ;AAKI,IAAA,KAAK,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;;AAWJ,sBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,GADL,CADJ;AAKH;;AACD,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,WAAW,EAAEG,KAAK,CAACC;AADa,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,MAAM,EAAE,MAAM;AACVK,MAAAA,QAAQ,CAACV,MAAM,CAACI,WAAP,EAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeL,OAAO,CAACO,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,eAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../Actions/index\";\r\nfunction ShowChartButton(props) {\r\n    var btn = null;\r\n    if (props.toggleChart) {\r\n        btn = (\r\n            <Button\r\n                onClick={() => {\r\n                    props.Toggle();\r\n                }}\r\n                variant=\"info\"\r\n                block\r\n            >\r\n                Show Chart\r\n            </Button>\r\n        );\r\n    } else\r\n        btn = (\r\n            <Button\r\n                onClick={() => {\r\n                    props.Toggle();\r\n                }}\r\n                variant=\"info\"\r\n                block\r\n            >\r\n                Close Chart\r\n            </Button>\r\n        );\r\n    return (\r\n        <Col sm={3} xs={3} md={3} lg={3}>\r\n            {btn}\r\n        </Col>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    toggleChart: state.ToggleChart,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        Toggle: () => {\r\n            dispatch(Action.toggleChart());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowChartButton);\r\n"]},"metadata":{},"sourceType":"module"}
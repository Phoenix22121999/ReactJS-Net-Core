{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\EditFields.js\";\nimport React, { useState } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport Form from \"react-bootstrap/Form\";\nimport Badge from \"react-bootstrap/Badge\";\nimport * as Action from \"../Actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction EditFields(props) {\n  const [nameChange, setNameChange] = useState(props.nameChange);\n\n  const renderField = ({\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error\n    }\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    pill: true,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"OldName: \" + nameChange)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    placeholder: label,\n    type: type,\n    className: \"form-control\" // value={nameChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }))));\n\n  console.log(nameChange);\n  return /*#__PURE__*/React.createElement(Field // previousValue={nameChange}\n  , {\n    name: \"row\",\n    component: renderField,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  });\n}\n\nEditFields = reduxForm({\n  // a unique name for the form\n  form: \"contact\",\n  enableReinitialize: true\n})(EditFields);\n\nconst mapStateToProps = state => ({\n  initialValues: state.EditTask.name\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateChart: () => {\n      dispatch(Action.resetChart());\n    }\n  };\n};\n\nexport default connect()(EditFields);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/EditFields.js"],"names":["React","useState","Field","reduxForm","Form","Badge","Action","connect","EditFields","props","nameChange","setNameChange","renderField","input","label","type","meta","touched","error","console","log","form","enableReinitialize","mapStateToProps","state","initialValues","EditTask","name","mapDispatchToProps","dispatch","updateChart","resetChart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,KAAK,CAACC,UAAP,CAA5C;;AAEA,QAAME,WAAW,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AAA5B,GAAD,kBAChB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,cAAcR,UADnB,CADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,+CACQG,KADR;AAEI,IAAA,WAAW,EAAEC,KAFjB;AAGI,IAAA,IAAI,EAAEC,IAHV;AAII,IAAA,SAAS,EAAC,cAJd,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CANJ,CADJ;;AAmBAI,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACA,sBACI,oBAAC,KAAD,CACI;AADJ;AAEI,IAAA,IAAI,EAAC,KAFT;AAGI,IAAA,SAAS,EAAEE,WAHf;AAII,IAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;AACDJ,UAAU,GAAGL,SAAS,CAAC;AACnB;AACAkB,EAAAA,IAAI,EAAE,SAFa;AAGnBC,EAAAA,kBAAkB,EAAE;AAHD,CAAD,CAAT,CAIVd,UAJU,CAAb;;AAKA,MAAMe,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,aAAa,EAAED,KAAK,CAACE,QAAN,CAAeC;AADE,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,WAAW,EAAE,MAAM;AACfD,MAAAA,QAAQ,CAACvB,MAAM,CAACyB,UAAP,EAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAexB,OAAO,GAAGC,UAAH,CAAtB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport * as Action from \"../Actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction EditFields(props) {\r\n    const [nameChange, setNameChange] = useState(props.nameChange);\r\n\r\n    const renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n        <Form>\r\n            <h5>\r\n                <Badge pill variant=\"primary\">\r\n                    {\"OldName: \" + nameChange}\r\n                </Badge>\r\n            </h5>\r\n            <div>\r\n                <input\r\n                    {...input}\r\n                    placeholder={label}\r\n                    type={type}\r\n                    className=\"form-control\"\r\n                    // value={nameChange}\r\n                />\r\n            </div>\r\n            {/* {touched && error && <span className=\"text-danger\">{error}</span>} */}\r\n        </Form>\r\n    );\r\n    console.log(nameChange);\r\n    return (\r\n        <Field\r\n            // previousValue={nameChange}\r\n            name=\"row\"\r\n            component={renderField}\r\n            type=\"text\"\r\n        />\r\n    );\r\n}\r\nEditFields = reduxForm({\r\n    // a unique name for the form\r\n    form: \"contact\",\r\n    enableReinitialize: true,\r\n})(EditFields);\r\nconst mapStateToProps = (state) => ({\r\n    initialValues: state.EditTask.name,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateChart: () => {\r\n            dispatch(Action.resetChart());\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect()(EditFields);\r\n"]},"metadata":{},"sourceType":"module"}
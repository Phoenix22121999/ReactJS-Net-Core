{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Title from \"./Component/Title\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport AddTaskForm from \"./Component/AddTaskForm\";\nimport TaskTable from \"./Component/TaskTable\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // showForm: false,\n      edit: false,\n      // search: \"\",\n      by: \"Name\",\n      dir: \"ASC\",\n      newTask: null,\n      updateTask: null,\n      oldName: null,\n      name: \"\",\n      level: 1\n    }; // console.log(\"app:\" + this.state.adding);\n    // this.showForm = this.showForm.bind(this);\n\n    this.closeForm = this.closeForm.bind(this);\n    this.onClickSearch = this.onClickSearch.bind(this);\n    this.onClickSearch = this.onClickSearch.bind(this);\n    this.sortChange = this.sortChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.resetNewTask = this.resetNewTask.bind(this);\n    this.setNameAndLevel = this.setNameAndLevel.bind(this);\n    this.updateTask = this.updateTask.bind(this);\n  } // showForm() {\n  //     this.setState({\n  //         edit: false,\n  //         showForm: !this.state.showForm,\n  //         name: \"\",\n  //         level: 1,\n  //     });\n  //     // console.log(\"change: \" + this.state.showForm);\n  // }\n\n\n  closeForm() {\n    this.setState({\n      showForm: false,\n      edit: false,\n      name: \"\",\n      level: 1\n    });\n  }\n\n  onClickSearch(search) {\n    this.setState({\n      search: search\n    });\n  }\n\n  sortChange(by, dir) {\n    this.setState({\n      by: by,\n      dir: dir\n    });\n  }\n\n  updateTask(oldname, name, level) {\n    this.setState({\n      updateTask: {\n        name: name,\n        level: level,\n        oldName: oldname\n      },\n      name: \"\",\n      level: 1\n    });\n  }\n\n  addTask(name, level) {\n    this.setState({\n      newTask: [{\n        name: name,\n        level: level\n      }]\n    });\n  }\n\n  resetNewTask() {\n    this.setState({\n      newTask: null\n    });\n  }\n\n  setNameAndLevel(name, level) {\n    this.setState({\n      edit: true,\n      showForm: true,\n      name: name,\n      level: level\n    });\n  }\n\n  render() {\n    // console.log(\"App: \", this.state.edit);\n    if (this.props.showForm) {\n      console.log(\"d\");\n      var form = /*#__PURE__*/React.createElement(AddTaskForm // closeForm={this.closeForm}\n      // showForm={this.state.showForm}\n      // addTask={this.addTask}\n      // name={this.state.name}\n      // level={this.state.level}\n      // updateTask={this.updateTask}\n      // edit={this.state.edit}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else form = null;\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      onClickSearch: this.onClickSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SortDropDown, {\n      sortChange: this.sortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AddTaskButton, {\n      showForm: this.showForm,\n      adding: this.state.showForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, form), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TaskTable, {\n      search: this.state.search,\n      by: this.state.by,\n      dir: this.state.dir,\n      newTask: this.state.newTask,\n      resetNewTask: this.resetNewTask,\n      setNameAndLevel: this.setNameAndLevel,\n      updateTask: this.state.updateTask //oldName={this.state.oldName}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nconst mapStateToProps = state => ({\n  showForm: state.ToggleForm\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/App.js"],"names":["React","Component","Container","Row","Title","Search","SortDropDown","AddTaskButton","AddTaskForm","TaskTable","connect","App","constructor","props","state","edit","by","dir","newTask","updateTask","oldName","name","level","closeForm","bind","onClickSearch","sortChange","addTask","resetNewTask","setNameAndLevel","setState","showForm","search","oldname","render","console","log","form","mapDispatchToProps","dispatch","mapStateToProps","ToggleForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Title from \"./Component/Title\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport AddTaskForm from \"./Component/AddTaskForm\";\nimport TaskTable from \"./Component/TaskTable\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // showForm: false,\n            edit: false,\n            // search: \"\",\n            by: \"Name\",\n            dir: \"ASC\",\n            newTask: null,\n            updateTask: null,\n            oldName: null,\n            name: \"\",\n            level: 1,\n        };\n        // console.log(\"app:\" + this.state.adding);\n        // this.showForm = this.showForm.bind(this);\n        this.closeForm = this.closeForm.bind(this);\n        this.onClickSearch = this.onClickSearch.bind(this);\n        this.onClickSearch = this.onClickSearch.bind(this);\n        this.sortChange = this.sortChange.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.resetNewTask = this.resetNewTask.bind(this);\n        this.setNameAndLevel = this.setNameAndLevel.bind(this);\n        this.updateTask = this.updateTask.bind(this);\n    }\n\n    // showForm() {\n    //     this.setState({\n    //         edit: false,\n    //         showForm: !this.state.showForm,\n    //         name: \"\",\n    //         level: 1,\n    //     });\n    //     // console.log(\"change: \" + this.state.showForm);\n    // }\n    closeForm() {\n        this.setState({\n            showForm: false,\n            edit: false,\n            name: \"\",\n            level: 1,\n        });\n    }\n\n    onClickSearch(search) {\n        this.setState({\n            search: search,\n        });\n    }\n\n    sortChange(by, dir) {\n        this.setState({\n            by: by,\n            dir: dir,\n        });\n    }\n\n    updateTask(oldname, name, level) {\n        this.setState({\n            updateTask: {\n                name: name,\n                level: level,\n                oldName: oldname,\n            },\n            name: \"\",\n            level: 1,\n        });\n    }\n\n    addTask(name, level) {\n        this.setState({\n            newTask: [\n                {\n                    name: name,\n                    level: level,\n                },\n            ],\n        });\n    }\n\n    resetNewTask() {\n        this.setState({\n            newTask: null,\n        });\n    }\n\n    setNameAndLevel(name, level) {\n        this.setState({\n            edit: true,\n            showForm: true,\n            name: name,\n            level: level,\n        });\n    }\n\n    render() {\n        // console.log(\"App: \", this.state.edit);\n        if (this.props.showForm) {\n            console.log(\"d\");\n            var form = (\n                <AddTaskForm\n                // closeForm={this.closeForm}\n                // showForm={this.state.showForm}\n                // addTask={this.addTask}\n                // name={this.state.name}\n                // level={this.state.level}\n                // updateTask={this.updateTask}\n                // edit={this.state.edit}\n                >\n                    {\" \"}\n                </AddTaskForm>\n            );\n        } else form = null;\n\n        return (\n            <Container>\n                <Row>\n                    <Title></Title>\n                </Row>\n\n                <Row>\n                    <Search onClickSearch={this.onClickSearch}></Search>\n                    <SortDropDown sortChange={this.sortChange}></SortDropDown>\n                    <AddTaskButton\n                        showForm={this.showForm}\n                        adding={this.state.showForm}\n                    ></AddTaskButton>\n                </Row>\n\n                <Row>{form}</Row>\n                <Row>\n                    <TaskTable\n                        search={this.state.search}\n                        by={this.state.by}\n                        dir={this.state.dir}\n                        newTask={this.state.newTask}\n                        resetNewTask={this.resetNewTask}\n                        setNameAndLevel={this.setNameAndLevel}\n                        updateTask={this.state.updateTask}\n                        //oldName={this.state.oldName}\n                    ></TaskTable>\n                </Row>\n            </Container>\n        );\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\nconst mapStateToProps = (state) => ({ showForm: state.ToggleForm });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
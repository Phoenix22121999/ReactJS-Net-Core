{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\AddTaskReduxForm.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"../Actions/index\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Container from \"react-bootstrap/Container\";\nimport Badge from \"react-bootstrap/Badge\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Row from \"react-bootstrap/Row\";\n\nclass AddTaskReduxForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSelect = ({\n      input,\n      meta,\n      type,\n      placeholder\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        as: \"select\",\n        custom: true\n      }, input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: 0,\n        style: {\n          background: \"black\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"Choose Priority\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"High\")), meta.error && /*#__PURE__*/React.createElement(Badge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 32\n        }\n      }, meta.error));\n    };\n\n    this.test = values => {\n      console.log(\"dssss\", values);\n    };\n  }\n\n  renderText({\n    input,\n    meta,\n    type,\n    placeholder\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, Object.assign({\n      type: \"input\" // placeholder={placeholder}\n\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    })), meta.error && /*#__PURE__*/React.createElement(Badge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 32\n      }\n    }, meta.error));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 5,\n        offset: 7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.props.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Badge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }, \"First Name\")), /*#__PURE__*/React.createElement(Field // className=\"form-control\"\n    , {\n      name: \"name\",\n      component: this.renderText // component=\"input\"\n      // type=\"text\"\n      // placeholder=\"First Name\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    }, \"Favorite Color\")), /*#__PURE__*/React.createElement(Field, {\n      name: \"level\" // component=\"select\"\n      ,\n      component: this.renderSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ff0000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, \"Red\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"00ff00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, \"Green\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"0000ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, \"Blue\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        offset: 5,\n        span: 7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      \"aria-label\": \"Basic example\" // className=\"justify-content-between\"\n      ,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      style: {\n        // padding: \"auto 0\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      style: {\n        // padding: \"auto 0\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }, \"Cancel\"))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    addTaskAction: task => {\n      dispatch(Action.addTask(task));\n    },\n    closeFormAction: () => {\n      dispatch(Action.closeForm());\n    },\n    setNewTask: task => {\n      dispatch(Action.setNewTask(task));\n    },\n    updateChart: () => {\n      dispatch(Action.resetChart());\n    }\n  };\n}\n\nconst validate = values => {\n  // console.log(initialValues);\n  const error = {};\n\n  if (!values.name) {\n    error.name = \"Required\";\n  }\n\n  if (!values.level || values.level === \"0\") {\n    error.level = \"Required\";\n  }\n\n  return error;\n};\n\nAddTaskReduxForm = reduxForm({\n  // a unique name for the form\n  // initialValues: { name: \"\", level: 0 },\n  validate\n})(AddTaskReduxForm);\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskReduxForm);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/AddTaskReduxForm.js"],"names":["React","Component","Field","reduxForm","connect","Action","Form","Col","Button","FormControl","Container","Badge","ButtonGroup","Row","AddTaskReduxForm","renderSelect","input","meta","type","placeholder","background","color","error","test","values","console","log","renderText","render","span","offset","props","handleSubmit","width","height","mapStateToProps","state","mapDispatchToProps","dispatch","addTaskAction","task","addTask","closeFormAction","closeForm","setNewTask","updateChart","resetChart","validate","name","level"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../Actions/index\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass AddTaskReduxForm extends Component {\r\n    renderText({ input, meta, type, placeholder }) {\r\n        return (\r\n            <div>\r\n                <FormControl\r\n                    type=\"input\"\r\n                    // placeholder={placeholder}\r\n                    {...input}\r\n                ></FormControl>\r\n                {meta.error && <Badge>{meta.error}</Badge>}\r\n            </div>\r\n        );\r\n    }\r\n    renderSelect = ({ input, meta, type, placeholder }) => {\r\n        return (\r\n            <div>\r\n                <Form.Control as=\"select\" custom {...input}>\r\n                    <option\r\n                        value={0}\r\n                        style={{ background: \"black\", color: \"white\" }}\r\n                    >\r\n                        Choose Priority\r\n                    </option>\r\n                    <option value={1}>Low</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>High</option>\r\n                </Form.Control>\r\n                {meta.error && <Badge>{meta.error}</Badge>}\r\n            </div>\r\n        );\r\n    };\r\n    test = (values) => {\r\n        console.log(\"dssss\", values);\r\n    };\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col md={{ span: 5, offset: 7 }}>\r\n                        <Form onSubmit={this.props.handleSubmit}>\r\n                            <Form.Row>\r\n                                <Col md={7}>\r\n                                    <Form.Group>\r\n                                        <h5>\r\n                                            {\" \"}\r\n                                            <Badge>First Name</Badge>\r\n                                        </h5>\r\n                                        <Field\r\n                                            // className=\"form-control\"\r\n                                            name=\"name\"\r\n                                            component={this.renderText}\r\n                                            // component=\"input\"\r\n                                            // type=\"text\"\r\n                                            // placeholder=\"First Name\"\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col md={5}>\r\n                                    {\" \"}\r\n                                    <h5>\r\n                                        <Badge>Favorite Color</Badge>\r\n                                    </h5>\r\n                                    <Field\r\n                                        name=\"level\"\r\n                                        // component=\"select\"\r\n                                        component={this.renderSelect}\r\n                                    >\r\n                                        <option />\r\n                                        <option value=\"ff0000\">Red</option>\r\n                                        <option value=\"00ff00\">Green</option>\r\n                                        <option value=\"0000ff\">Blue</option>\r\n                                    </Field>\r\n                                </Col>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Col md={{ offset: 5, span: 7 }}>\r\n                                    <ButtonGroup\r\n                                        aria-label=\"Basic example\"\r\n                                        // className=\"justify-content-between\"\r\n                                        style={{\r\n                                            width: \"100%\",\r\n                                            height: \"100%\",\r\n                                        }}\r\n                                    >\r\n                                        <Button\r\n                                            variant=\"primary\"\r\n                                            type=\"submit\"\r\n                                            style={{\r\n                                                // padding: \"auto 0\",\r\n                                                width: \"100%\",\r\n                                                height: \"100%\",\r\n                                            }}\r\n                                        >\r\n                                            Done\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"secondary\"\r\n                                            style={{\r\n                                                // padding: \"auto 0\",\r\n                                                width: \"100%\",\r\n                                                height: \"100%\",\r\n                                            }}\r\n                                        >\r\n                                            Cancel\r\n                                        </Button>\r\n                                        {/* <Button variant=\"secondary\">Right</Button> */}\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Form.Row>\r\n                            {/* </div> */}\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({});\r\n\r\nfunction mapDispatchToProps(dispatch, props) {\r\n    return {\r\n        addTaskAction: (task) => {\r\n            dispatch(Action.addTask(task));\r\n        },\r\n        closeFormAction: () => {\r\n            dispatch(Action.closeForm());\r\n        },\r\n        setNewTask: (task) => {\r\n            dispatch(Action.setNewTask(task));\r\n        },\r\n        updateChart: () => {\r\n            dispatch(Action.resetChart());\r\n        },\r\n    };\r\n}\r\n\r\nconst validate = (values) => {\r\n    // console.log(initialValues);\r\n    const error = {};\r\n    if (!values.name) {\r\n        error.name = \"Required\";\r\n    }\r\n    if (!values.level || values.level === \"0\") {\r\n        error.level = \"Required\";\r\n    }\r\n    return error;\r\n};\r\n\r\nAddTaskReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    // initialValues: { name: \"\", level: 0 },\r\n    validate,\r\n})(AddTaskReduxForm);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskReduxForm);\r\n"]},"metadata":{},"sourceType":"module"}
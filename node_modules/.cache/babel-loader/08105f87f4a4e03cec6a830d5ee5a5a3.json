{"ast":null,"code":"import * as signalR from \"@microsoft/signalr\";\nexport const connection = new signalR.HubConnectionBuilder().withUrl(\"http://localhost:5000/chathub\").configureLogging(signalR.LogLevel.Information).build();\n\nasync function start() {\n  try {\n    await connection.start();\n    console.log(\"connected table\");\n  } catch (err) {\n    console.log(err);\n    setTimeout(() => start(), 5000);\n  }\n}\n\nconnection.onclose(async () => {\n  await start();\n}); // connection.on(\"ReceiveMessage\", (message) => {\n//     console.log(\"đã nhận:\", message);\n//     fetch(\"http://localhost:3000/api/Todo\", {\n//         method: \"GET\",\n//     })\n//         .then((response) => {\n//             console.log(response);\n//             return response.json();\n//         })\n//         .catch((e) => {\n//             console.error(\"Err\", e);\n//         })\n//         .then((data) => {\n//             // console.log(data);\n//             localStorage.setItem(\"Tasks\", JSON.stringify(data));\n//             console.log(data);\n//             // Cookies.set(\"Task\", data);\n//             // console.log(localStorage.getItem(\"Tasks\"));\n//         })\n//         .then(() => {\n//             props.resetTask();\n//         });\n// });\n// const mapStateToProps = (state) => ({});\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         resetTask: () => {\n//             dispatch(Action.resetTask());\n//         },\n//     };\n// }\n// connect(mapStateToProps, mapDispatchToProps);\n// Start the connection.\n\nstart();\nexport default connection;","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Reducer/ConnectHub.js"],"names":["signalR","connection","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","start","console","log","err","setTimeout","onclose"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,oBAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,IAAID,OAAO,CAACE,oBAAZ,GACrBC,OADqB,CACb,+BADa,EAErBC,gBAFqB,CAEJJ,OAAO,CAACK,QAAR,CAAiBC,WAFb,EAGrBC,KAHqB,EAAnB;;AAKP,eAAeC,KAAf,GAAuB;AACnB,MAAI;AACA,UAAMP,UAAU,CAACO,KAAX,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAC,IAAAA,UAAU,CAAC,MAAMJ,KAAK,EAAZ,EAAgB,IAAhB,CAAV;AACH;AACJ;;AAEDP,UAAU,CAACY,OAAX,CAAmB,YAAY;AAC3B,QAAML,KAAK,EAAX;AACH,CAFD,E,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAA,KAAK;AACL,eAAeP,UAAf","sourcesContent":["import * as signalR from \"@microsoft/signalr\";\r\n\r\nexport const connection = new signalR.HubConnectionBuilder()\r\n    .withUrl(\"http://localhost:5000/chathub\")\r\n    .configureLogging(signalR.LogLevel.Information)\r\n    .build();\r\n\r\nasync function start() {\r\n    try {\r\n        await connection.start();\r\n        console.log(\"connected table\");\r\n    } catch (err) {\r\n        console.log(err);\r\n        setTimeout(() => start(), 5000);\r\n    }\r\n}\r\n\r\nconnection.onclose(async () => {\r\n    await start();\r\n});\r\n\r\n// connection.on(\"ReceiveMessage\", (message) => {\r\n//     console.log(\"đã nhận:\", message);\r\n//     fetch(\"http://localhost:3000/api/Todo\", {\r\n//         method: \"GET\",\r\n//     })\r\n//         .then((response) => {\r\n//             console.log(response);\r\n//             return response.json();\r\n//         })\r\n//         .catch((e) => {\r\n//             console.error(\"Err\", e);\r\n//         })\r\n//         .then((data) => {\r\n//             // console.log(data);\r\n//             localStorage.setItem(\"Tasks\", JSON.stringify(data));\r\n//             console.log(data);\r\n//             // Cookies.set(\"Task\", data);\r\n//             // console.log(localStorage.getItem(\"Tasks\"));\r\n//         })\r\n//         .then(() => {\r\n//             props.resetTask();\r\n//         });\r\n// });\r\n\r\n// const mapStateToProps = (state) => ({});\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//     return {\r\n//         resetTask: () => {\r\n//             dispatch(Action.resetTask());\r\n//         },\r\n//     };\r\n// }\r\n// connect(mapStateToProps, mapDispatchToProps);\r\n\r\n// Start the connection.\r\nstart();\r\nexport default connection;\r\n"]},"metadata":{},"sourceType":"module"}
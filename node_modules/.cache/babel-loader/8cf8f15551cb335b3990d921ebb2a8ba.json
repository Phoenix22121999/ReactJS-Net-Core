{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\Web\\\\React\\\\react-app\\\\src\\\\Component\\\\TaskRow.js\";\nimport React, { Component } from \"react\";\nimport Edit from \"./Edit\";\nexport default class TaskRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: this.props.index,\n      task: this.props.task\n    };\n  }\n\n  toggleEditOrSave(task) {\n    if (this.state.isEdit) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"warning\",\n        onClick: () => this.handleSave(task.name, task.level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, \"Save\");\n    } else {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"warning\",\n        onClick: () => this.handleEdit(task.name, task.level),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, \"Edit\");\n    }\n  }\n\n  isEditName(task) {\n    if (task.name !== this.state.editName || this.state.isEdit === false) {\n      // console.log(\"nor \", task.name);\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }\n      }, task.name);\n    } else if (this.state.isEdit === true) {\n      // console.log(\"text \", task.name);\n      return /*#__PURE__*/React.createElement(Edit, {\n        newName: this.state.newName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }) // <td>\n      //     <Form.Control\n      //         type=\"text\"\n      //         value={this.state.newName}\n      //         onChange={this.nameChange}\n      //     ></Form.Control>\n      // </td>\n      ;\n    }\n  }\n\n  delete(name) {\n    // console.log(\"delete\");\n    const tmpArr = this.state.Task.filter(task => {\n      return task.name !== name;\n    });\n    this.setState({\n      Task: tmpArr\n    });\n  }\n\n  isEditLevel(task) {\n    if (task.name !== this.state.editName || this.state.isEdit === false) {\n      // console.log(\"nor \", task.name);\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }\n      }, this.level(task.level));\n    } else if (this.state.isEdit === true) {\n      // console.log(\"select \", task.name);\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        value: this.state.newLevel,\n        as: \"select\",\n        name: \"ds\",\n        id: \"inputDs\",\n        onChange: this.levelChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, \"High\")));\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <tr key={index}>\n      React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, index + 1), this.isEditName(task), this.isEditLevel(task), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, this.toggleEditOrSave(task), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          return this.delete(task.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, \"Delete\"))))\n    );\n  }\n\n}","map":{"version":3,"sources":["E:/Học Tập/Web/React/react-app/src/Component/TaskRow.js"],"names":["React","Component","Edit","TaskRow","constructor","props","state","index","task","toggleEditOrSave","isEdit","handleSave","name","level","handleEdit","isEditName","editName","newName","delete","tmpArr","Task","filter","setState","isEditLevel","newLevel","levelChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Edit from \"./Edit\";\r\nexport default class TaskRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            index: this.props.index,\r\n            task: this.props.task,\r\n        };\r\n    }\r\n\r\n    toggleEditOrSave(task) {\r\n        if (this.state.isEdit) {\r\n            return (\r\n                <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => this.handleSave(task.name, task.level)}\r\n                >\r\n                    Save\r\n                </Button>\r\n            );\r\n        } else {\r\n            return (\r\n                <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => this.handleEdit(task.name, task.level)}\r\n                >\r\n                    Edit\r\n                </Button>\r\n            );\r\n        }\r\n    }\r\n\r\n    isEditName(task) {\r\n        if (task.name !== this.state.editName || this.state.isEdit === false) {\r\n            // console.log(\"nor \", task.name);\r\n            return <td>{task.name}</td>;\r\n        } else if (this.state.isEdit === true) {\r\n            // console.log(\"text \", task.name);\r\n            return (\r\n                <Edit newName={this.state.newName}></Edit>\r\n                // <td>\r\n                //     <Form.Control\r\n                //         type=\"text\"\r\n                //         value={this.state.newName}\r\n                //         onChange={this.nameChange}\r\n                //     ></Form.Control>\r\n                // </td>\r\n            );\r\n        }\r\n    }\r\n\r\n    delete(name) {\r\n        // console.log(\"delete\");\r\n        const tmpArr = this.state.Task.filter((task) => {\r\n            return task.name !== name;\r\n        });\r\n        this.setState({\r\n            Task: tmpArr,\r\n        });\r\n    }\r\n\r\n    isEditLevel(task) {\r\n        if (task.name !== this.state.editName || this.state.isEdit === false) {\r\n            // console.log(\"nor \", task.name);\r\n            return <td className=\"text-center\">{this.level(task.level)}</td>;\r\n        } else if (this.state.isEdit === true) {\r\n            // console.log(\"select \", task.name);\r\n            return (\r\n                <td className=\"text-center\">\r\n                    <Form.Control\r\n                        value={this.state.newLevel}\r\n                        as=\"select\"\r\n                        name=\"ds\"\r\n                        id=\"inputDs\"\r\n                        onChange={this.levelChange}\r\n                    >\r\n                        <option value={1}>Low</option>\r\n                        <option value={2}>Medium</option>\r\n                        <option value={3}>High</option>\r\n                    </Form.Control>\r\n                </td>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // <tr key={index}>\r\n            <tr>\r\n                <td className=\"text-center\">{index + 1}</td>\r\n                {this.isEditName(task)}\r\n                {this.isEditLevel(task)}\r\n                {/* <td>{task.name}</td> */}\r\n                {/* <td className=\"text-center\">{this.level(task.level)}</td> */}\r\n                <td className=\"text-center\">\r\n                    <ButtonGroup>\r\n                        {this.toggleEditOrSave(task)}\r\n                        {/* <Button\r\n                    variant=\"warning\"\r\n                    onClick={() =>\r\n                        this.handleEdit(task.name, task.level)\r\n                    }\r\n                >\r\n                    Edit\r\n                </Button> */}\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            onClick={() => {\r\n                                return this.delete(task.name);\r\n                            }}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
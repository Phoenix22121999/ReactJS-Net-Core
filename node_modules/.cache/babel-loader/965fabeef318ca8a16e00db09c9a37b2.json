{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\Chatbox.js\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../Chatbox.css\"; // import InputGroup from \"react-bootstrap/InputGroup\";\n\nimport ChatGroup from \"./ChatGroup\";\nimport ChatForm from \"./ChatForm\";\nimport { reset } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"../Actions/index\";\nimport connection from \"../Reducer/ConnectHub\";\nimport { Badge } from \"react-bootstrap\";\n\nfunction Chatbox(props) {\n  function test(values) {\n    console.log(values.Chat, props.username.username);\n    connection.invoke(\"SendChatMessageToUser\", values.Chat, props.userchatwith, props.username.username);\n    props.resetChat();\n  }\n\n  const chatList = props.chat.map((chat, index) => {\n    console.log(props.userchatwith);\n\n    if (chat.usernameReceive === props.userchatwith) {\n      if (chat.username === props.username.username) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex-column d-flex mb-2\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"name_display_send d-flex justify-content-end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }\n        }, chat.username), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"msg_cotainer_send\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }\n        }, chat.message)));\n      } else return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-column d-flex mb-2\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"name_display d-flex justify-content-start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }, chat.username), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-start  \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"msg_cotainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, chat.message)));\n    }\n  });\n  return /*#__PURE__*/React.createElement(Col, {\n    className: \"chat\",\n    md: {\n      span: 7\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card_chatbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"msg_head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      fontSize: \"200%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \" \", props.userchatwith))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \" msg_card_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, chatList), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ChatForm, {\n    onSubmit: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))));\n}\n\nconst mapStateToProps = state => ({\n  username: state.LoginUserName,\n  chat: state.Chat,\n  userchatwith: state.UserChatWith\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    resetChat: () => {\n      dispatch(reset(\"Chat\"));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chatbox);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/Chatbox.js"],"names":["React","Row","Col","Card","Form","Button","ChatGroup","ChatForm","reset","connect","Action","connection","Badge","Chatbox","props","test","values","console","log","Chat","username","invoke","userchatwith","resetChat","chatList","chat","map","index","usernameReceive","message","span","width","fontSize","mapStateToProps","state","LoginUserName","UserChatWith","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,gBAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,WAASC,IAAT,CAAcC,MAAd,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAAyBL,KAAK,CAACM,QAAN,CAAeA,QAAxC;AACAT,IAAAA,UAAU,CAACU,MAAX,CACI,uBADJ,EAEIL,MAAM,CAACG,IAFX,EAGIL,KAAK,CAACQ,YAHV,EAIIR,KAAK,CAACM,QAAN,CAAeA,QAJnB;AAMAN,IAAAA,KAAK,CAACS,SAAN;AACH;;AACD,QAAMC,QAAQ,GAAGV,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAe,CAACD,IAAD,EAAOE,KAAP,KAAiB;AAC7CV,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACQ,YAAlB;;AACA,QAAIG,IAAI,CAACG,eAAL,KAAyBd,KAAK,CAACQ,YAAnC,EAAiD;AAC7C,UAAIG,IAAI,CAACL,QAAL,KAAkBN,KAAK,CAACM,QAAN,CAAeA,QAArC,EAA+C;AAC3C,4BACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAyC,UAAA,GAAG,EAAEO,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKF,IAAI,CAACL,QADV,CADJ,eAII;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKK,IAAI,CAACI,OADV,CADJ,CAJJ,CADJ;AAYH,OAbD,MAcI,oBACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,GAAG,EAAEF,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKF,IAAI,CAACL,QADV,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BK,IAAI,CAACI,OAApC,CADJ,CAJJ,CADJ;AAUP;AACJ,GA5BgB,CAAjB;AA6BA,sBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBlB,KAAK,CAACQ,YAA/B,CADJ,CADJ,CADJ,eAMI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCE,QAAvC,CANJ,eAOI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAET,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ,CADJ;AAeH;;AACD,MAAMkB,eAAe,GAAIC,KAAD,KAAY;AAChCd,EAAAA,QAAQ,EAAEc,KAAK,CAACC,aADgB;AAEhCV,EAAAA,IAAI,EAAES,KAAK,CAACf,IAFoB;AAGhCG,EAAAA,YAAY,EAAEY,KAAK,CAACE;AAHY,CAAZ,CAAxB;;AAMA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHf,IAAAA,SAAS,EAAE,MAAM;AACbe,MAAAA,QAAQ,CAAC9B,KAAK,CAAC,MAAD,CAAN,CAAR;AACH;AAHE,GAAP;AAKH;;AAED,eAAeC,OAAO,CAACwB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxB,OAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../Chatbox.css\";\r\n// import InputGroup from \"react-bootstrap/InputGroup\";\r\nimport ChatGroup from \"./ChatGroup\";\r\nimport ChatForm from \"./ChatForm\";\r\nimport { reset } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../Actions/index\";\r\nimport connection from \"../Reducer/ConnectHub\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nfunction Chatbox(props) {\r\n    function test(values) {\r\n        console.log(values.Chat, props.username.username);\r\n        connection.invoke(\r\n            \"SendChatMessageToUser\",\r\n            values.Chat,\r\n            props.userchatwith,\r\n            props.username.username\r\n        );\r\n        props.resetChat();\r\n    }\r\n    const chatList = props.chat.map((chat, index) => {\r\n        console.log(props.userchatwith);\r\n        if (chat.usernameReceive === props.userchatwith) {\r\n            if (chat.username === props.username.username) {\r\n                return (\r\n                    <div className=\"flex-column d-flex mb-2\" key={index}>\r\n                        <div className=\"name_display_send d-flex justify-content-end\">\r\n                            {chat.username}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end\">\r\n                            <div className=\"msg_cotainer_send\">\r\n                                {chat.message}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else\r\n                return (\r\n                    <div className=\"flex-column d-flex mb-2\" key={index}>\r\n                        <div className=\"name_display d-flex justify-content-start\">\r\n                            {chat.username}\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-start  \">\r\n                            <div className=\"msg_cotainer\">{chat.message}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n        }\r\n    });\r\n    return (\r\n        <Col className=\"chat\" md={{ span: 7 }}>\r\n            <Card className=\"card_chatbox\">\r\n                <Card.Header className=\"msg_head\">\r\n                    <div style={{ width: \"100%\", fontSize: \"200%\" }}>\r\n                        <Badge variant=\"light\"> {props.userchatwith}</Badge>\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body className=\" msg_card_body\">{chatList}</Card.Body>\r\n                <Card.Footer>\r\n                    <ChatForm onSubmit={test}></ChatForm>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    username: state.LoginUserName,\r\n    chat: state.Chat,\r\n    userchatwith: state.UserChatWith,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        resetChat: () => {\r\n            dispatch(reset(\"Chat\"));\r\n        },\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chatbox);\r\n"]},"metadata":{},"sourceType":"module"}
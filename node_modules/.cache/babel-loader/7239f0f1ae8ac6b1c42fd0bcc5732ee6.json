{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\AddTaskForm.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"../Actions/index\";\n\nclass AddTaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {// adding: this.props.showForm,\n      // taskName: this.props.name,\n      // taskLevel: this.props.level,\n      // oldTaskName: this.props.name,\n    };\n    this.closeForm = this.closeForm.bind(this);\n    this.levelChange = this.levelChange.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.saveForm = this.saveForm.bind(this);\n  } // UNSAFE_componentWillReceiveProps(nextProps) {\n  //     this.setState({\n  //         taskName: nextProps.name,\n  //         taskLevel: nextProps.level,\n  //         oldTaskName: nextProps.name,\n  //     });\n  // }\n\n\n  submitForm() {\n    // this.props.addTask(this.state.taskName, parseInt(this.state.taskLevel));\n    this.props.addTaskAction({\n      name: this.state.taskName,\n      level: parseInt(this.state.taskLevel)\n    });\n  }\n\n  levelChange(e) {\n    // this.setState({\n    //     taskLevel: e.target.value,\n    // });\n    this.props.setNewTask({\n      name: this.props.newTaskName,\n      level: e.target.value\n    });\n  }\n\n  nameChange(e) {\n    // this.setState({\n    //     taskName: e.target.value,\n    // });\n    this.props.setNewTask({\n      name: e.target.value,\n      level: this.props.newTaskLevel\n    });\n  }\n\n  saveForm() {\n    this.props.updateTask(this.state.oldTaskName, this.state.taskName, parseInt(this.state.taskLevel));\n  }\n\n  addSaveToggle(edit) {\n    // console.log(edit);\n    if (edit) {\n      return /*#__PURE__*/React.createElement(Button, {\n        onClick: this.saveForm,\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, \"Save\");\n    } else return /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submitForm,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Add\");\n  }\n\n  closeForm() {\n    this.props.closeForm();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 5,\n        offset: 7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      srOnly: true,\n      htmlFor: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"label\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.props.newTaskName,\n      onChange: this.nameChange,\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Task Name\",\n      ref: \"task_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      srOnly: true,\n      htmlFor: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }, \"label\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.props.newTaskLevel,\n      as: \"select\",\n      name: \"ds\",\n      id: \"inputDs\",\n      onChange: this.levelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, \"High\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, this.addSaveToggle(this.props.edit), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.props.closeFormAction();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, \"Cancel\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  toggleForm: state.ToggleForm,\n  toggleEdit: state.ToggleEdit,\n  newTaskName: state.NewTask.name,\n  newTaskLevel: state.NewTask.level\n});\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    addTaskAction: task => {\n      dispatch(Action.addTask(task));\n    },\n    closeFormAction: () => {\n      dispatch(Action.closeForm());\n    },\n    setNewTask: task => {\n      dispatch(Action.setNewTask(task));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskForm);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/AddTaskForm.js"],"names":["React","Component","Form","Col","Button","ButtonGroup","connect","Action","AddTaskForm","constructor","props","state","closeForm","bind","levelChange","nameChange","submitForm","saveForm","addTaskAction","name","taskName","level","parseInt","taskLevel","e","setNewTask","newTaskName","target","value","newTaskLevel","updateTask","oldTaskName","addSaveToggle","edit","render","span","offset","closeFormAction","mapStateToProps","toggleForm","ToggleForm","toggleEdit","ToggleEdit","NewTask","mapDispatchToProps","dispatch","task","addTask"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../Actions/index\";\r\nclass AddTaskForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // adding: this.props.showForm,\r\n            // taskName: this.props.name,\r\n            // taskLevel: this.props.level,\r\n            // oldTaskName: this.props.name,\r\n        };\r\n        this.closeForm = this.closeForm.bind(this);\r\n        this.levelChange = this.levelChange.bind(this);\r\n        this.nameChange = this.nameChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.saveForm = this.saveForm.bind(this);\r\n    }\r\n\r\n    // UNSAFE_componentWillReceiveProps(nextProps) {\r\n    //     this.setState({\r\n    //         taskName: nextProps.name,\r\n    //         taskLevel: nextProps.level,\r\n    //         oldTaskName: nextProps.name,\r\n    //     });\r\n    // }\r\n\r\n    submitForm() {\r\n        // this.props.addTask(this.state.taskName, parseInt(this.state.taskLevel));\r\n        this.props.addTaskAction({\r\n            name: this.state.taskName,\r\n            level: parseInt(this.state.taskLevel),\r\n        });\r\n    }\r\n\r\n    levelChange(e) {\r\n        // this.setState({\r\n        //     taskLevel: e.target.value,\r\n        // });\r\n        this.props.setNewTask({\r\n            name: this.props.newTaskName,\r\n            level: e.target.value,\r\n        });\r\n    }\r\n\r\n    nameChange(e) {\r\n        // this.setState({\r\n        //     taskName: e.target.value,\r\n        // });\r\n        this.props.setNewTask({\r\n            name: e.target.value,\r\n            level: this.props.newTaskLevel,\r\n        });\r\n    }\r\n    saveForm() {\r\n        this.props.updateTask(\r\n            this.state.oldTaskName,\r\n            this.state.taskName,\r\n            parseInt(this.state.taskLevel)\r\n        );\r\n    }\r\n    addSaveToggle(edit) {\r\n        // console.log(edit);\r\n        if (edit) {\r\n            return (\r\n                <Button onClick={this.saveForm} variant=\"primary\">\r\n                    Save\r\n                </Button>\r\n            );\r\n        } else\r\n            return (\r\n                <Button onClick={this.submitForm} variant=\"primary\">\r\n                    Add\r\n                </Button>\r\n            );\r\n    }\r\n\r\n    closeForm() {\r\n        this.props.closeForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Col md={{ span: 5, offset: 7 }}>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Col md={8}>\r\n                            <Form.Group>\r\n                                <Form.Label srOnly={true} htmlFor=\"true\">\r\n                                    label\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    value={this.props.newTaskName}\r\n                                    onChange={this.nameChange}\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Task Name\"\r\n                                    ref=\"task_name\"\r\n                                />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Form.Label srOnly={true} htmlFor=\"true\">\r\n                                label\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                value={this.props.newTaskLevel}\r\n                                as=\"select\"\r\n                                name=\"ds\"\r\n                                id=\"inputDs\"\r\n                                onChange={this.levelChange}\r\n                            >\r\n                                <option value={1}>Low</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>High</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col md={12}>\r\n                            <ButtonGroup md={12}>\r\n                                {this.addSaveToggle(this.props.edit)}\r\n                                {/* <Button\r\n                                    onClick={this.submitForm}\r\n                                    variant=\"primary\"\r\n                                >\r\n                                    Add\r\n                                </Button> \r\n                                this.closeForm*/}\r\n\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        this.props.closeFormAction();\r\n                                    }}\r\n                                >\r\n                                    Cancel\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    toggleForm: state.ToggleForm,\r\n    toggleEdit: state.ToggleEdit,\r\n    newTaskName: state.NewTask.name,\r\n    newTaskLevel: state.NewTask.level,\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch, props) {\r\n    return {\r\n        addTaskAction: (task) => {\r\n            dispatch(Action.addTask(task));\r\n        },\r\n        closeFormAction: () => {\r\n            dispatch(Action.closeForm());\r\n        },\r\n        setNewTask: (task) => {\r\n            dispatch(Action.setNewTask(task));\r\n        },\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTaskForm);\r\n"]},"metadata":{},"sourceType":"module"}
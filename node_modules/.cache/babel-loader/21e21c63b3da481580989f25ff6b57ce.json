{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Title from \"./Component/Title\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport AddTaskForm from \"./Component/AddTaskForm\";\nimport TaskTable from \"./Component/TaskTable\";\nimport ShowChartButton from \"./Component/ShowChartButton\";\nimport AddTaskReduxForm from \"./Component/AddTaskReduxForm\";\nimport Chart from \"./Component/Chart\";\nimport { connect } from \"react-redux\"; // import { Values } from \"redux-form-website-template\";\n\nclass App extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     // this.state = {\n  //     //     // showForm: false,\n  //     //     // edit: false,\n  //     //     // search: \"\",\n  //     //     // by: \"Name\",\n  //     //     // dir: \"ASC\",\n  //     //     // newTask: null,\n  //     //     // updateTask: null,\n  //     //     // oldName: null,\n  //     //     // name: \"\",\n  //     //     // level: 1,\n  //     // };\n  //     // console.log(\"app:\" + this.state.adding);\n  //     // this.showForm = this.showForm.bind(this);\n  //     // this.closeForm = this.closeForm.bind(this);\n  //     // this.onClickSearch = this.onClickSearch.bind(this);\n  //     // this.onClickSearch = this.onClickSearch.bind(this);\n  //     // this.sortChange = this.sortChange.bind(this);\n  //     // // this.addTask = this.addTask.bind(this);\n  //     // this.resetNewTask = this.resetNewTask.bind(this);\n  //     // this.setNameAndLevel = this.setNameAndLevel.bind(this);\n  //     // this.updateTask = this.updateTask.bind(this);\n  // }\n  // showForm() {\n  //     this.setState({\n  //         edit: false,\n  //         showForm: !this.state.showForm,\n  //         name: \"\",\n  //         level: 1,\n  //     });\n  //     // console.log(\"change: \" + this.state.showForm);\n  // }\n  // closeForm() {\n  //     this.setState({\n  //         // showForm: false,\n  //         // edit: false,\n  //         // name: \"\",\n  //         // level: 1,\n  //     });\n  // }\n  // onClickSearch(search) {\n  //     this.setState({\n  //         search: search,\n  //     });\n  // }\n  // sortChange(by, dir) {\n  //     this.setState({\n  //         by: by,\n  //         dir: dir,\n  //     });\n  // }\n  // updateTask(oldname, name, level) {\n  //     this.setState({\n  //         updateTask: {\n  //             name: name,\n  //             level: level,\n  //             oldName: oldname,\n  //         },\n  //         name: \"\",\n  //         level: 1,\n  //     });\n  // }\n  // addTask(name, level) {\n  //     this.setState({\n  //         newTask: [\n  //             {\n  //                 name: name,\n  //                 level: level,\n  //             },\n  //         ],\n  //     });\n  // }\n  // resetNewTask() {\n  //     this.setState({\n  //         newTask: null,\n  //     });\n  // }\n  AddTask(Values) {\n    console.log(Values);\n    let tl = JSON.parse(localStorage.getItem(\"Tasks\"));\n    let lastTask = tl[tl.length - 1];\n    this.props.closeFormAction();\n    this.props.addTaskAction({\n      id: parseInt(lastTask.id + 1),\n      name: Values.name,\n      level: parseInt(Values.level)\n    });\n    props.updateChart();\n  }\n\n  render() {\n    // console.log(\"App: \", this.state.edit);\n    if (this.props.showForm) {\n      console.log(\"d\");\n      var form =\n      /*#__PURE__*/\n      // <AddTaskForm\n      // // closeForm={this.closeForm}\n      // // showForm={this.state.showForm}\n      // // addTask={this.addTask}\n      // // name={this.state.name}\n      // // level={this.state.level}\n      // // updateTask={this.updateTask}\n      // // edit={this.state.edit}\n      // >\n      //     {\" \"}\n      // </AddTaskForm>\n      React.createElement(AddTaskReduxForm, {\n        form: \"AddForm\",\n        onSubmit: this.AddTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      });\n    } else form = null;\n\n    if (this.props.showChart) {\n      console.log(\"d\");\n      var chart = /*#__PURE__*/React.createElement(Chart // closeForm={this.closeForm}\n      // showForm={this.state.showForm}\n      // addTask={this.addTask}\n      // name={this.state.name}\n      // level={this.state.level}\n      // updateTask={this.updateTask}\n      // edit={this.state.edit}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else chart = null;\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SortDropDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ShowChartButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AddTaskButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, form), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#1b262c\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, chart), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TaskTable // search={this.state.search}\n    // by={this.state.by}\n    // dir={this.state.dir}\n    // newTask={this.state.newTask}\n    // resetNewTask={this.resetNewTask}\n    // setNameAndLevel={this.setNameAndLevel}\n    // updateTask={this.state.updateTask}\n    //oldName={this.state.oldName}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    addTaskAction: task => {\n      dispatch(Action.addTask(task));\n    },\n    closeFormAction: () => {\n      dispatch(Action.closeForm());\n    },\n    setNewTask: task => {\n      dispatch(Action.setNewTask(task));\n    },\n    updateChart: () => {\n      dispatch(Action.resetChart());\n    }\n  };\n}\n\nconst mapStateToProps = state => ({\n  showForm: state.ToggleForm,\n  showChart: state.ToggleChart\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/App.js"],"names":["React","Component","Container","Row","Title","Search","SortDropDown","AddTaskButton","AddTaskForm","TaskTable","ShowChartButton","AddTaskReduxForm","Chart","connect","App","AddTask","Values","console","log","tl","JSON","parse","localStorage","getItem","lastTask","length","props","closeFormAction","addTaskAction","id","parseInt","name","level","updateChart","render","showForm","form","showChart","chart","backgroundColor","mapDispatchToProps","dispatch","task","Action","addTask","closeForm","setNewTask","resetChart","mapStateToProps","state","ToggleForm","ToggleChart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Title from \"./Component/Title\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport AddTaskForm from \"./Component/AddTaskForm\";\nimport TaskTable from \"./Component/TaskTable\";\nimport ShowChartButton from \"./Component/ShowChartButton\";\nimport AddTaskReduxForm from \"./Component/AddTaskReduxForm\";\nimport Chart from \"./Component/Chart\";\nimport { connect } from \"react-redux\";\n// import { Values } from \"redux-form-website-template\";\n\nclass App extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     // this.state = {\n    //     //     // showForm: false,\n    //     //     // edit: false,\n    //     //     // search: \"\",\n    //     //     // by: \"Name\",\n    //     //     // dir: \"ASC\",\n    //     //     // newTask: null,\n    //     //     // updateTask: null,\n    //     //     // oldName: null,\n    //     //     // name: \"\",\n    //     //     // level: 1,\n    //     // };\n    //     // console.log(\"app:\" + this.state.adding);\n    //     // this.showForm = this.showForm.bind(this);\n    //     // this.closeForm = this.closeForm.bind(this);\n    //     // this.onClickSearch = this.onClickSearch.bind(this);\n    //     // this.onClickSearch = this.onClickSearch.bind(this);\n    //     // this.sortChange = this.sortChange.bind(this);\n    //     // // this.addTask = this.addTask.bind(this);\n    //     // this.resetNewTask = this.resetNewTask.bind(this);\n    //     // this.setNameAndLevel = this.setNameAndLevel.bind(this);\n    //     // this.updateTask = this.updateTask.bind(this);\n    // }\n\n    // showForm() {\n    //     this.setState({\n    //         edit: false,\n    //         showForm: !this.state.showForm,\n    //         name: \"\",\n    //         level: 1,\n    //     });\n    //     // console.log(\"change: \" + this.state.showForm);\n    // }\n    // closeForm() {\n    //     this.setState({\n    //         // showForm: false,\n    //         // edit: false,\n    //         // name: \"\",\n    //         // level: 1,\n    //     });\n    // }\n\n    // onClickSearch(search) {\n    //     this.setState({\n    //         search: search,\n    //     });\n    // }\n\n    // sortChange(by, dir) {\n    //     this.setState({\n    //         by: by,\n    //         dir: dir,\n    //     });\n    // }\n\n    // updateTask(oldname, name, level) {\n    //     this.setState({\n    //         updateTask: {\n    //             name: name,\n    //             level: level,\n    //             oldName: oldname,\n    //         },\n    //         name: \"\",\n    //         level: 1,\n    //     });\n    // }\n\n    // addTask(name, level) {\n    //     this.setState({\n    //         newTask: [\n    //             {\n    //                 name: name,\n    //                 level: level,\n    //             },\n    //         ],\n    //     });\n    // }\n\n    // resetNewTask() {\n    //     this.setState({\n    //         newTask: null,\n    //     });\n    // }\n\n    AddTask(Values) {\n        console.log(Values);\n        let tl = JSON.parse(localStorage.getItem(\"Tasks\"));\n        let lastTask = tl[tl.length - 1];\n        this.props.closeFormAction();\n        this.props.addTaskAction({\n            id: parseInt(lastTask.id + 1),\n            name: Values.name,\n            level: parseInt(Values.level),\n        });\n        props.updateChart();\n    }\n\n    render() {\n        // console.log(\"App: \", this.state.edit);\n        if (this.props.showForm) {\n            console.log(\"d\");\n            var form = (\n                // <AddTaskForm\n                // // closeForm={this.closeForm}\n                // // showForm={this.state.showForm}\n                // // addTask={this.addTask}\n                // // name={this.state.name}\n                // // level={this.state.level}\n                // // updateTask={this.updateTask}\n                // // edit={this.state.edit}\n                // >\n                //     {\" \"}\n                // </AddTaskForm>\n                <AddTaskReduxForm\n                    form=\"AddForm\"\n                    onSubmit={this.AddTask}\n                ></AddTaskReduxForm>\n            );\n        } else form = null;\n\n        if (this.props.showChart) {\n            console.log(\"d\");\n            var chart = (\n                <Chart\n                // closeForm={this.closeForm}\n                // showForm={this.state.showForm}\n                // addTask={this.addTask}\n                // name={this.state.name}\n                // level={this.state.level}\n                // updateTask={this.updateTask}\n                // edit={this.state.edit}\n                >\n                    {\" \"}\n                </Chart>\n            );\n        } else chart = null;\n\n        return (\n            <Container>\n                {/* <Values form=\"row\" /> */}\n                <Row>\n                    <Title></Title>\n                </Row>\n\n                <Row>\n                    <Search></Search>\n                    <SortDropDown></SortDropDown>\n                    <ShowChartButton></ShowChartButton>\n                    <AddTaskButton></AddTaskButton>\n                </Row>\n\n                <Row>{form}</Row>\n                {/* <Chart> </Chart> */}\n                <Row style={{ backgroundColor: \"#1b262c\" }}>{chart}</Row>\n                <Row>\n                    <TaskTable\n                    // search={this.state.search}\n                    // by={this.state.by}\n                    // dir={this.state.dir}\n                    // newTask={this.state.newTask}\n                    // resetNewTask={this.resetNewTask}\n                    // setNameAndLevel={this.setNameAndLevel}\n                    // updateTask={this.state.updateTask}\n                    //oldName={this.state.oldName}\n                    ></TaskTable>\n                </Row>\n            </Container>\n        );\n    }\n}\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        addTaskAction: (task) => {\n            dispatch(Action.addTask(task));\n        },\n        closeFormAction: () => {\n            dispatch(Action.closeForm());\n        },\n        setNewTask: (task) => {\n            dispatch(Action.setNewTask(task));\n        },\n        updateChart: () => {\n            dispatch(Action.resetChart());\n        },\n    };\n}\nconst mapStateToProps = (state) => ({\n    showForm: state.ToggleForm,\n    showChart: state.ToggleChart,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
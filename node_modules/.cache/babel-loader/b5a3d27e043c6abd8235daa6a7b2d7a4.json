{"ast":null,"code":"import * as TYPE from \"../Const/Types\";\nimport TaskList from \"../Tasks/Task.json\";\nimport Cookies from \"js-cookie\"; // import $ from \"jquery\";\n\nvar local;\nlocal = localStorage.getItem(\"Tasks\");\n\nif (local === \"undefined\") {\n  console.log(\"resetdata\"); //local = JSON.stringify(TaskList.Task);\n\n  localStorage.setItem(\"Tasks\", JSON.stringify(TaskList.Task));\n}\n\nlocal = localStorage.getItem(\"Tasks\");\nfetch(\"http://localhost:3000/api/TodoTasks\").then(response => response.json()).catch(e => {\n  console.log(\"Err\", e);\n}).then(data => {\n  Cookies.set(\"Task\", data);\n});\nconsole.log();\nconst initialState = JSON.parse(local); // $.ajax({\n//     type: \"get\",\n//     url: \"https://localhost:5001/api/TodoTasks\",\n//     success: function (response) {\n//         console.log(response);\n//     },\n// });\n\nfunction sort(arr, by, dir) {\n  switch (by) {\n    case \"Name\":\n      switch (dir) {\n        case \"DESC\":\n          return arr.sort((a, b) => {\n            // console.log(\"DESC\", a.name - b.name);\n            if (b.name < a.name) {\n              return -1;\n            }\n\n            if (b.name > a.name) {\n              return 1;\n            } // name trùng nhau\n\n\n            return 0; // return b.name - a.name;\n          });\n\n        default:\n          return arr.sort((a, b) => {\n            // console.log(\"ASC\", a.name - b.name);\n            if (b.name < a.name) {\n              return 1;\n            }\n\n            if (b.name > a.name) {\n              return -1;\n            }\n\n            return 0;\n          });\n      }\n\n    default:\n      switch (dir) {\n        case \"DESC\":\n          return arr.sort((a, b) => {\n            return b.level - a.level;\n          });\n\n        default:\n          return arr.sort((a, b) => {\n            return a.level - b.level;\n          });\n      }\n\n  }\n}\n\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case TYPE.LIST:\n      // console.log(\"reducer\", action);\n      return state;\n\n    case TYPE.ADD_TASK:\n      // console.log(\"reducer\", action);\n      state.push(action.task); // console.log(\"state\", state);\n      // console.log(\"js\", JSON.stringify(state));\n\n      localStorage.setItem(\"Tasks\", JSON.stringify(state));\n      return [...state];\n\n    case TYPE.DELETE_TASK:\n      // console.log(\"reducer\", action);\n      let tmpArr = JSON.parse(localStorage.getItem(\"Tasks\")).filter(task => {\n        return task.name !== action.taskName;\n      });\n      let tmpArr2 = state.filter(task => {\n        return task.name !== action.taskName;\n      }); // console.log(\"state\", tmpArr);\n      // console.log(\"js\", JSON.stringify(tmpArr));\n\n      localStorage.setItem(\"Tasks\", JSON.stringify(tmpArr));\n      return [...tmpArr2];\n\n    case TYPE.UPDATE_TASK:\n      console.log(\"Update\", action);\n      let updateArr = state.map(task => {\n        if (task.name === action.oldName) {\n          return {\n            name: action.newTask.name,\n            level: action.newTask.level\n          };\n        } else return task;\n      }); // console.log(\"state\", updateArr);\n      // console.log(\"js\", JSON.stringify(updateArr));\n\n      localStorage.setItem(\"Tasks\", JSON.stringify(updateArr));\n      return [...updateArr];\n\n    case TYPE.SEARCH:\n      // console.log(\"SEARCH\", action);\n      // JSON.parse(localStorage.getItem(\"Tasks\"))\n      const taskListSearched = JSON.parse(localStorage.getItem(\"Tasks\")).filter(task => {\n        return task.name.toLowerCase().includes(action.search.toLowerCase());\n      }); // console.log(\"state\", state);\n      // console.log(\"js\", JSON.stringify(taskListSearched));\n      // localStorage.setItem(\"Tasks\", JSON.stringify(updateArr));\n\n      return [...taskListSearched];\n\n    case TYPE.SORT:\n      // console.log(\"Sort\", action);\n      // console.log(\"state\", state);\n      // JSON.parse(localStorage.getItem(\"Tasks\"))\n      const taskListSorted = sort(state, action.by, action.dir); // console.log(\"state\", taskListSorted);\n      // console.log(\"js\", JSON.stringify(taskListSearched));\n      // localStorage.setItem(\"Tasks\", JSON.stringify(updateArr));\n\n      return [...taskListSorted];\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Reducer/ListTask.js"],"names":["TYPE","TaskList","Cookies","local","localStorage","getItem","console","log","setItem","JSON","stringify","Task","fetch","then","response","json","catch","e","data","set","initialState","parse","sort","arr","by","dir","a","b","name","level","state","action","type","LIST","ADD_TASK","push","task","DELETE_TASK","tmpArr","filter","taskName","tmpArr2","UPDATE_TASK","updateArr","map","oldName","newTask","SEARCH","taskListSearched","toLowerCase","includes","search","SORT","taskListSorted"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AACA,IAAIC,KAAJ;AACAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;;AACA,IAAIF,KAAK,KAAK,WAAd,EAA2B;AACvBG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADuB,CAEvB;;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACU,IAAxB,CAA9B;AACH;;AACDR,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AAEAO,KAAK,CAAC,qCAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKC,KAFL,CAEYC,CAAD,IAAO;AACVX,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBU,CAAnB;AACH,CAJL,EAKKJ,IALL,CAKWK,IAAD,IAAU;AACZhB,EAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBD,IAApB;AACH,CAPL;AASAZ,OAAO,CAACC,GAAR;AACA,MAAMa,YAAY,GAAGX,IAAI,CAACY,KAAL,CAAWlB,KAAX,CAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASmB,IAAT,CAAcC,GAAd,EAAmBC,EAAnB,EAAuBC,GAAvB,EAA4B;AACxB,UAAQD,EAAR;AACI,SAAK,MAAL;AACI,cAAQC,GAAR;AACI,aAAK,MAAL;AACI,iBAAOF,GAAG,CAACD,IAAJ,CAAS,CAACI,CAAD,EAAIC,CAAJ,KAAU;AACtB;AACA,gBAAIA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACjB,qBAAO,CAAC,CAAR;AACH;;AACD,gBAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACjB,qBAAO,CAAP;AACH,aAPqB,CAStB;;;AACA,mBAAO,CAAP,CAVsB,CAWtB;AACH,WAZM,CAAP;;AAcJ;AACI,iBAAOL,GAAG,CAACD,IAAJ,CAAS,CAACI,CAAD,EAAIC,CAAJ,KAAU;AACtB;AACA,gBAAIA,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACjB,qBAAO,CAAP;AACH;;AACD,gBAAID,CAAC,CAACC,IAAF,GAASF,CAAC,CAACE,IAAf,EAAqB;AACjB,qBAAO,CAAC,CAAR;AACH;;AACD,mBAAO,CAAP;AACH,WATM,CAAP;AAjBR;;AA6BJ;AACI,cAAQH,GAAR;AACI,aAAK,MAAL;AACI,iBAAOF,GAAG,CAACD,IAAJ,CAAS,CAACI,CAAD,EAAIC,CAAJ,KAAU;AACtB,mBAAOA,CAAC,CAACE,KAAF,GAAUH,CAAC,CAACG,KAAnB;AACH,WAFM,CAAP;;AAIJ;AACI,iBAAON,GAAG,CAACD,IAAJ,CAAS,CAACI,CAAD,EAAIC,CAAJ,KAAU;AACtB,mBAAOD,CAAC,CAACG,KAAF,GAAUF,CAAC,CAACE,KAAnB;AACH,WAFM,CAAP;AAPR;;AAhCR;AA4CH;;AAED,gBAAe,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhC,IAAI,CAACiC,IAAV;AACI;AACA,aAAOH,KAAP;;AACJ,SAAK9B,IAAI,CAACkC,QAAV;AACI;AACAJ,MAAAA,KAAK,CAACK,IAAN,CAAWJ,MAAM,CAACK,IAAlB,EAFJ,CAGI;AACA;;AACAhC,MAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeoB,KAAf,CAA9B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ,SAAK9B,IAAI,CAACqC,WAAV;AACI;AAEA,UAAIC,MAAM,GAAG7B,IAAI,CAACY,KAAL,CAAWjB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,EAA0CkC,MAA1C,CACRH,IAAD,IAAU;AACN,eAAOA,IAAI,CAACR,IAAL,KAAcG,MAAM,CAACS,QAA5B;AACH,OAHQ,CAAb;AAKA,UAAIC,OAAO,GAAGX,KAAK,CAACS,MAAN,CAAcH,IAAD,IAAU;AACjC,eAAOA,IAAI,CAACR,IAAL,KAAcG,MAAM,CAACS,QAA5B;AACH,OAFa,CAAd,CARJ,CAWI;AACA;;AACApC,MAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe4B,MAAf,CAA9B;AAEA,aAAO,CAAC,GAAGG,OAAJ,CAAP;;AACJ,SAAKzC,IAAI,CAAC0C,WAAV;AACIpC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBwB,MAAtB;AACA,UAAIY,SAAS,GAAGb,KAAK,CAACc,GAAN,CAAWR,IAAD,IAAU;AAChC,YAAIA,IAAI,CAACR,IAAL,KAAcG,MAAM,CAACc,OAAzB,EAAkC;AAC9B,iBAAO;AACHjB,YAAAA,IAAI,EAAEG,MAAM,CAACe,OAAP,CAAelB,IADlB;AAEHC,YAAAA,KAAK,EAAEE,MAAM,CAACe,OAAP,CAAejB;AAFnB,WAAP;AAIH,SALD,MAKO,OAAOO,IAAP;AACV,OAPe,CAAhB,CAFJ,CAUI;AACA;;AACAhC,MAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeiC,SAAf,CAA9B;AACA,aAAO,CAAC,GAAGA,SAAJ,CAAP;;AACJ,SAAK3C,IAAI,CAAC+C,MAAV;AACI;AACA;AACA,YAAMC,gBAAgB,GAAGvC,IAAI,CAACY,KAAL,CACrBjB,YAAY,CAACC,OAAb,CAAqB,OAArB,CADqB,EAEvBkC,MAFuB,CAEfH,IAAD,IAAU;AACf,eAAOA,IAAI,CAACR,IAAL,CACFqB,WADE,GAEFC,QAFE,CAEOnB,MAAM,CAACoB,MAAP,CAAcF,WAAd,EAFP,CAAP;AAGH,OANwB,CAAzB,CAHJ,CAUI;AACA;AACA;;AACA,aAAO,CAAC,GAAGD,gBAAJ,CAAP;;AACJ,SAAKhD,IAAI,CAACoD,IAAV;AACI;AACA;AAEA;AACA,YAAMC,cAAc,GAAG/B,IAAI,CAACQ,KAAD,EAAQC,MAAM,CAACP,EAAf,EAAmBO,MAAM,CAACN,GAA1B,CAA3B,CALJ,CAMI;AACA;AACA;;AACA,aAAO,CAAC,GAAG4B,cAAJ,CAAP;;AACJ;AACI,aAAOvB,KAAP;AAlER;;AAoEA,SAAOA,KAAP;AACH,CAtED","sourcesContent":["import * as TYPE from \"../Const/Types\";\r\nimport TaskList from \"../Tasks/Task.json\";\r\nimport Cookies from \"js-cookie\";\r\n// import $ from \"jquery\";\r\nvar local;\r\nlocal = localStorage.getItem(\"Tasks\");\r\nif (local === \"undefined\") {\r\n    console.log(\"resetdata\");\r\n    //local = JSON.stringify(TaskList.Task);\r\n    localStorage.setItem(\"Tasks\", JSON.stringify(TaskList.Task));\r\n}\r\nlocal = localStorage.getItem(\"Tasks\");\r\n\r\nfetch(\"http://localhost:3000/api/TodoTasks\")\r\n    .then((response) => response.json())\r\n    .catch((e) => {\r\n        console.log(\"Err\", e);\r\n    })\r\n    .then((data) => {\r\n        Cookies.set(\"Task\", data);\r\n    });\r\n\r\nconsole.log();\r\nconst initialState = JSON.parse(local);\r\n\r\n// $.ajax({\r\n//     type: \"get\",\r\n//     url: \"https://localhost:5001/api/TodoTasks\",\r\n//     success: function (response) {\r\n//         console.log(response);\r\n//     },\r\n// });\r\n\r\nfunction sort(arr, by, dir) {\r\n    switch (by) {\r\n        case \"Name\":\r\n            switch (dir) {\r\n                case \"DESC\":\r\n                    return arr.sort((a, b) => {\r\n                        // console.log(\"DESC\", a.name - b.name);\r\n                        if (b.name < a.name) {\r\n                            return -1;\r\n                        }\r\n                        if (b.name > a.name) {\r\n                            return 1;\r\n                        }\r\n\r\n                        // name trùng nhau\r\n                        return 0;\r\n                        // return b.name - a.name;\r\n                    });\r\n\r\n                default:\r\n                    return arr.sort((a, b) => {\r\n                        // console.log(\"ASC\", a.name - b.name);\r\n                        if (b.name < a.name) {\r\n                            return 1;\r\n                        }\r\n                        if (b.name > a.name) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n            }\r\n\r\n        default:\r\n            switch (dir) {\r\n                case \"DESC\":\r\n                    return arr.sort((a, b) => {\r\n                        return b.level - a.level;\r\n                    });\r\n\r\n                default:\r\n                    return arr.sort((a, b) => {\r\n                        return a.level - b.level;\r\n                    });\r\n            }\r\n    }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPE.LIST:\r\n            // console.log(\"reducer\", action);\r\n            return state;\r\n        case TYPE.ADD_TASK:\r\n            // console.log(\"reducer\", action);\r\n            state.push(action.task);\r\n            // console.log(\"state\", state);\r\n            // console.log(\"js\", JSON.stringify(state));\r\n            localStorage.setItem(\"Tasks\", JSON.stringify(state));\r\n            return [...state];\r\n        case TYPE.DELETE_TASK:\r\n            // console.log(\"reducer\", action);\r\n\r\n            let tmpArr = JSON.parse(localStorage.getItem(\"Tasks\")).filter(\r\n                (task) => {\r\n                    return task.name !== action.taskName;\r\n                }\r\n            );\r\n            let tmpArr2 = state.filter((task) => {\r\n                return task.name !== action.taskName;\r\n            });\r\n            // console.log(\"state\", tmpArr);\r\n            // console.log(\"js\", JSON.stringify(tmpArr));\r\n            localStorage.setItem(\"Tasks\", JSON.stringify(tmpArr));\r\n\r\n            return [...tmpArr2];\r\n        case TYPE.UPDATE_TASK:\r\n            console.log(\"Update\", action);\r\n            let updateArr = state.map((task) => {\r\n                if (task.name === action.oldName) {\r\n                    return {\r\n                        name: action.newTask.name,\r\n                        level: action.newTask.level,\r\n                    };\r\n                } else return task;\r\n            });\r\n            // console.log(\"state\", updateArr);\r\n            // console.log(\"js\", JSON.stringify(updateArr));\r\n            localStorage.setItem(\"Tasks\", JSON.stringify(updateArr));\r\n            return [...updateArr];\r\n        case TYPE.SEARCH:\r\n            // console.log(\"SEARCH\", action);\r\n            // JSON.parse(localStorage.getItem(\"Tasks\"))\r\n            const taskListSearched = JSON.parse(\r\n                localStorage.getItem(\"Tasks\")\r\n            ).filter((task) => {\r\n                return task.name\r\n                    .toLowerCase()\r\n                    .includes(action.search.toLowerCase());\r\n            });\r\n            // console.log(\"state\", state);\r\n            // console.log(\"js\", JSON.stringify(taskListSearched));\r\n            // localStorage.setItem(\"Tasks\", JSON.stringify(updateArr));\r\n            return [...taskListSearched];\r\n        case TYPE.SORT:\r\n            // console.log(\"Sort\", action);\r\n            // console.log(\"state\", state);\r\n\r\n            // JSON.parse(localStorage.getItem(\"Tasks\"))\r\n            const taskListSorted = sort(state, action.by, action.dir);\r\n            // console.log(\"state\", taskListSorted);\r\n            // console.log(\"js\", JSON.stringify(taskListSearched));\r\n            // localStorage.setItem(\"Tasks\", JSON.stringify(updateArr));\r\n            return [...taskListSorted];\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
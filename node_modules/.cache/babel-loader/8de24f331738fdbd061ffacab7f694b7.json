{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./Reducer/Index\";\nimport { Provider } from \"react-redux\";\nimport \"@microsoft/signalr\";\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst connection = new signalR.HubConnectionBuilder().withUrl(\"/chatHub\").configureLogging(signalR.LogLevel.Information).build();\n\nasync function start() {\n  try {\n    await connection.start();\n    console.log(\"connected\");\n  } catch (err) {\n    console.log(err);\n    setTimeout(() => start(), 5000);\n  }\n}\n\nconnection.onclose(async () => {\n  await start();\n}); // Start the connection.\n\nstart();\n/* this is here to show an alternative to start, with a then\nconnection.start().then(() => console.log(\"connected\"));\n*/\n\n/* this is here to show another alternative to start, with a catch\nconnection.start().catch(err => console.error(err));\n*/\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}), \" \"), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","reducer","Provider","store","window","__REDUX_DEVTOOLS_EXTENSION__","connection","signalR","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","start","console","log","err","setTimeout","onclose","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,oBAAP;AACA,MAAMC,KAAK,GAAGH,WAAW,CACrBC,OADqB,EAErBG,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlB,CAAzB;AAKA,MAAMC,UAAU,GAAG,IAAIC,OAAO,CAACC,oBAAZ,GACdC,OADc,CACN,UADM,EAEdC,gBAFc,CAEGH,OAAO,CAACI,QAAR,CAAiBC,WAFpB,EAGdC,KAHc,EAAnB;;AAKA,eAAeC,KAAf,GAAuB;AACnB,MAAI;AACA,UAAMR,UAAU,CAACQ,KAAX,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACVF,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAC,IAAAA,UAAU,CAAC,MAAMJ,KAAK,EAAZ,EAAgB,IAAhB,CAAV;AACH;AACJ;;AAEDR,UAAU,CAACa,OAAX,CAAmB,YAAY;AAC3B,QAAML,KAAK,EAAX;AACH,CAFD,E,CAIA;;AACAA,KAAK;AAEL;;;;AAIA;;;;AAIAjB,QAAQ,CAACuB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEjB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EACY,GADZ,CADJ,EAIIkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ,E,CAOA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport reducer from \"./Reducer/Index\";\nimport { Provider } from \"react-redux\";\nimport \"@microsoft/signalr\";\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst connection = new signalR.HubConnectionBuilder()\n    .withUrl(\"/chatHub\")\n    .configureLogging(signalR.LogLevel.Information)\n    .build();\n\nasync function start() {\n    try {\n        await connection.start();\n        console.log(\"connected\");\n    } catch (err) {\n        console.log(err);\n        setTimeout(() => start(), 5000);\n    }\n}\n\nconnection.onclose(async () => {\n    await start();\n});\n\n// Start the connection.\nstart();\n\n/* this is here to show an alternative to start, with a then\nconnection.start().then(() => console.log(\"connected\"));\n*/\n\n/* this is here to show another alternative to start, with a catch\nconnection.start().catch(err => console.error(err));\n*/\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />{\" \"}\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}
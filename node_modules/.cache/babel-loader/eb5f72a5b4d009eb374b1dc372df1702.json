{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Title from \"./Component/Title\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport AddTaskForm from \"./Component/AddTaskForm\";\nimport TaskTable from \"./Component/TaskTable\";\nimport ShowChartButton from \"./Component/ShowChartButton\";\nimport Chart from \"./Component/Chart\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  // constructor(props) {\n  //     super(props);\n  //     // this.state = {\n  //     //     // showForm: false,\n  //     //     // edit: false,\n  //     //     // search: \"\",\n  //     //     // by: \"Name\",\n  //     //     // dir: \"ASC\",\n  //     //     // newTask: null,\n  //     //     // updateTask: null,\n  //     //     // oldName: null,\n  //     //     // name: \"\",\n  //     //     // level: 1,\n  //     // };\n  //     // console.log(\"app:\" + this.state.adding);\n  //     // this.showForm = this.showForm.bind(this);\n  //     // this.closeForm = this.closeForm.bind(this);\n  //     // this.onClickSearch = this.onClickSearch.bind(this);\n  //     // this.onClickSearch = this.onClickSearch.bind(this);\n  //     // this.sortChange = this.sortChange.bind(this);\n  //     // // this.addTask = this.addTask.bind(this);\n  //     // this.resetNewTask = this.resetNewTask.bind(this);\n  //     // this.setNameAndLevel = this.setNameAndLevel.bind(this);\n  //     // this.updateTask = this.updateTask.bind(this);\n  // }\n  // showForm() {\n  //     this.setState({\n  //         edit: false,\n  //         showForm: !this.state.showForm,\n  //         name: \"\",\n  //         level: 1,\n  //     });\n  //     // console.log(\"change: \" + this.state.showForm);\n  // }\n  // closeForm() {\n  //     this.setState({\n  //         // showForm: false,\n  //         // edit: false,\n  //         // name: \"\",\n  //         // level: 1,\n  //     });\n  // }\n  // onClickSearch(search) {\n  //     this.setState({\n  //         search: search,\n  //     });\n  // }\n  // sortChange(by, dir) {\n  //     this.setState({\n  //         by: by,\n  //         dir: dir,\n  //     });\n  // }\n  // updateTask(oldname, name, level) {\n  //     this.setState({\n  //         updateTask: {\n  //             name: name,\n  //             level: level,\n  //             oldName: oldname,\n  //         },\n  //         name: \"\",\n  //         level: 1,\n  //     });\n  // }\n  // addTask(name, level) {\n  //     this.setState({\n  //         newTask: [\n  //             {\n  //                 name: name,\n  //                 level: level,\n  //             },\n  //         ],\n  //     });\n  // }\n  // resetNewTask() {\n  //     this.setState({\n  //         newTask: null,\n  //     });\n  // }\n  // setNameAndLevel(name, level) {\n  //     this.setState({\n  //         edit: true,\n  //         showForm: true,\n  //         name: name,\n  //         level: level,\n  //     });\n  // }\n  render() {\n    // console.log(\"App: \", this.state.edit);\n    if (this.props.showForm) {\n      console.log(\"d\");\n      var form = /*#__PURE__*/React.createElement(AddTaskForm // closeForm={this.closeForm}\n      // showForm={this.state.showForm}\n      // addTask={this.addTask}\n      // name={this.state.name}\n      // level={this.state.level}\n      // updateTask={this.updateTask}\n      // edit={this.state.edit}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else form = null;\n\n    if (this.props.showChart) {\n      console.log(\"d\");\n      var chart = /*#__PURE__*/React.createElement(Chart // closeForm={this.closeForm}\n      // showForm={this.state.showForm}\n      // addTask={this.addTask}\n      // name={this.state.name}\n      // level={this.state.level}\n      // updateTask={this.updateTask}\n      // edit={this.state.edit}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, \" \");\n    } else chart = null;\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SortDropDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ShowChartButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AddTaskButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, form), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        backgroundColor: \"#1b262c\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, chart), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TaskTable // search={this.state.search}\n    // by={this.state.by}\n    // dir={this.state.dir}\n    // newTask={this.state.newTask}\n    // resetNewTask={this.resetNewTask}\n    // setNameAndLevel={this.setNameAndLevel}\n    // updateTask={this.state.updateTask}\n    //oldName={this.state.oldName}\n    , {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n\nconst mapStateToProps = state => ({\n  showForm: state.ToggleForm,\n  showChart: state.ToggleChart\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/App.js"],"names":["React","Component","Container","Row","Title","Search","SortDropDown","AddTaskButton","AddTaskForm","TaskTable","ShowChartButton","Chart","connect","App","render","props","showForm","console","log","form","showChart","chart","backgroundColor","mapDispatchToProps","dispatch","mapStateToProps","state","ToggleForm","ToggleChart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Title from \"./Component/Title\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport AddTaskForm from \"./Component/AddTaskForm\";\nimport TaskTable from \"./Component/TaskTable\";\nimport ShowChartButton from \"./Component/ShowChartButton\";\nimport Chart from \"./Component/Chart\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     // this.state = {\n    //     //     // showForm: false,\n    //     //     // edit: false,\n    //     //     // search: \"\",\n    //     //     // by: \"Name\",\n    //     //     // dir: \"ASC\",\n    //     //     // newTask: null,\n    //     //     // updateTask: null,\n    //     //     // oldName: null,\n    //     //     // name: \"\",\n    //     //     // level: 1,\n    //     // };\n    //     // console.log(\"app:\" + this.state.adding);\n    //     // this.showForm = this.showForm.bind(this);\n    //     // this.closeForm = this.closeForm.bind(this);\n    //     // this.onClickSearch = this.onClickSearch.bind(this);\n    //     // this.onClickSearch = this.onClickSearch.bind(this);\n    //     // this.sortChange = this.sortChange.bind(this);\n    //     // // this.addTask = this.addTask.bind(this);\n    //     // this.resetNewTask = this.resetNewTask.bind(this);\n    //     // this.setNameAndLevel = this.setNameAndLevel.bind(this);\n    //     // this.updateTask = this.updateTask.bind(this);\n    // }\n\n    // showForm() {\n    //     this.setState({\n    //         edit: false,\n    //         showForm: !this.state.showForm,\n    //         name: \"\",\n    //         level: 1,\n    //     });\n    //     // console.log(\"change: \" + this.state.showForm);\n    // }\n    // closeForm() {\n    //     this.setState({\n    //         // showForm: false,\n    //         // edit: false,\n    //         // name: \"\",\n    //         // level: 1,\n    //     });\n    // }\n\n    // onClickSearch(search) {\n    //     this.setState({\n    //         search: search,\n    //     });\n    // }\n\n    // sortChange(by, dir) {\n    //     this.setState({\n    //         by: by,\n    //         dir: dir,\n    //     });\n    // }\n\n    // updateTask(oldname, name, level) {\n    //     this.setState({\n    //         updateTask: {\n    //             name: name,\n    //             level: level,\n    //             oldName: oldname,\n    //         },\n    //         name: \"\",\n    //         level: 1,\n    //     });\n    // }\n\n    // addTask(name, level) {\n    //     this.setState({\n    //         newTask: [\n    //             {\n    //                 name: name,\n    //                 level: level,\n    //             },\n    //         ],\n    //     });\n    // }\n\n    // resetNewTask() {\n    //     this.setState({\n    //         newTask: null,\n    //     });\n    // }\n\n    // setNameAndLevel(name, level) {\n    //     this.setState({\n    //         edit: true,\n    //         showForm: true,\n    //         name: name,\n    //         level: level,\n    //     });\n    // }\n\n    render() {\n        // console.log(\"App: \", this.state.edit);\n        if (this.props.showForm) {\n            console.log(\"d\");\n            var form = (\n                <AddTaskForm\n                // closeForm={this.closeForm}\n                // showForm={this.state.showForm}\n                // addTask={this.addTask}\n                // name={this.state.name}\n                // level={this.state.level}\n                // updateTask={this.updateTask}\n                // edit={this.state.edit}\n                >\n                    {\" \"}\n                </AddTaskForm>\n            );\n        } else form = null;\n\n        if (this.props.showChart) {\n            console.log(\"d\");\n            var chart = (\n                <Chart\n                // closeForm={this.closeForm}\n                // showForm={this.state.showForm}\n                // addTask={this.addTask}\n                // name={this.state.name}\n                // level={this.state.level}\n                // updateTask={this.updateTask}\n                // edit={this.state.edit}\n                >\n                    {\" \"}\n                </Chart>\n            );\n        } else chart = null;\n\n        return (\n            <Container>\n                <Row>\n                    <Title></Title>\n                </Row>\n\n                <Row>\n                    <Search></Search>\n                    <SortDropDown></SortDropDown>\n                    <ShowChartButton></ShowChartButton>\n                    <AddTaskButton></AddTaskButton>\n                </Row>\n\n                <Row>{form}</Row>\n                <Row style={{ backgroundColor: \"#1b262c\" }}>{chart}</Row>\n                <Row>\n                    <TaskTable\n                    // search={this.state.search}\n                    // by={this.state.by}\n                    // dir={this.state.dir}\n                    // newTask={this.state.newTask}\n                    // resetNewTask={this.resetNewTask}\n                    // setNameAndLevel={this.setNameAndLevel}\n                    // updateTask={this.state.updateTask}\n                    //oldName={this.state.oldName}\n                    ></TaskTable>\n                </Row>\n            </Container>\n        );\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return {};\n}\nconst mapStateToProps = (state) => ({\n    showForm: state.ToggleForm,\n    showChart: state.ToggleChart,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
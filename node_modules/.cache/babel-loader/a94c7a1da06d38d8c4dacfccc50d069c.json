{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\EditForm.js\";\nimport React from \"react\";\nimport { Field, reduxForm, submit, SubmissionError } from \"redux-form\";\nimport * as Action from \"../Actions/index\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\n\nfunction EditForm(props) {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n\n  const renderText = ({\n    input,\n    meta,\n    type,\n    placeholder\n  }) => {\n    return /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n      as: \"input\",\n      custom: true\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  const renderSelect = ({\n    input,\n    meta,\n    type,\n    placeholder\n  }) => {\n    return /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n      as: \"select\",\n      custom: true\n    }, input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: 0,\n      style: {\n        background: \"black\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"Choose Priority\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"High\"));\n  };\n\n  function level(level) {\n    switch (level) {\n      case 1:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"light\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }\n        }, \"Low\");\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 24\n          }\n        }, \"Medium\");\n\n      case 3:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }\n        }, \"High\");\n\n      default:\n        return /*#__PURE__*/React.createElement(Badge, {\n          variant: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 24\n          }\n        }, \"No Level\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, props.index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 3,\n    className: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    className: \"container-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, \"Old Name: \", props.task.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"name\" // component={renderText}\n    ,\n    component: \"input\" // type=\"text\"\n    ,\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"Old Level: \", level(props.task.level)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"level\" // component=\"select\"\n    ,\n    component: renderSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-form text-center  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    \"aria-label\": \"Basic example\",\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => {\n      props.onClose();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, \"Cancel\"))))))));\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleEdit: () => {\n      dispatch(Action.toggleEdit());\n    }\n  };\n};\n\nconst validate = values => {\n  const err = {};\n\n  if (!values.name) {\n    err.name = \"Required\";\n  }\n\n  if (!values.level) {\n    err.name = \"Required\";\n  }\n};\n\nEditForm = reduxForm({\n  // a unique name for the form\n  form: \"row\"\n})(EditForm);\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/EditForm.js"],"names":["React","Field","reduxForm","submit","SubmissionError","Action","Badge","Form","ButtonGroup","Button","connect","EditForm","props","handleSubmit","pristine","reset","submitting","renderText","input","meta","type","placeholder","renderSelect","background","color","level","index","task","name","width","height","onClose","mapStateToProps","state","mapDispatchToProps","dispatch","toggleEdit","validate","values","err","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm, submit, SubmissionError } from \"redux-form\";\r\nimport * as Action from \"../Actions/index\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction EditForm(props) {\r\n    const { handleSubmit, pristine, reset, submitting } = props;\r\n\r\n    const renderText = ({ input, meta, type, placeholder }) => {\r\n        return <Form.Control as=\"input\" custom {...input}></Form.Control>;\r\n    };\r\n\r\n    const renderSelect = ({ input, meta, type, placeholder }) => {\r\n        return (\r\n            <Form.Control as=\"select\" custom {...input}>\r\n                <option\r\n                    value={0}\r\n                    style={{ background: \"black\", color: \"white\" }}\r\n                >\r\n                    Choose Priority\r\n                </option>\r\n                <option value={1}>Low</option>\r\n                <option value={2}>Medium</option>\r\n                <option value={3}>High</option>\r\n            </Form.Control>\r\n        );\r\n    };\r\n    function level(level) {\r\n        switch (level) {\r\n            case 1:\r\n                return <Badge variant=\"light\">Low</Badge>;\r\n            case 2:\r\n                return <Badge variant=\"info\">Medium</Badge>;\r\n            case 3:\r\n                return <Badge variant=\"danger\">High</Badge>;\r\n            default:\r\n                return <Badge variant=\"primary\">No Level</Badge>;\r\n        }\r\n    }\r\n    return (\r\n        <tr>\r\n            <td className=\"text-center\">{props.index + 1}</td>\r\n            <td colSpan={3} className=\"td\">\r\n                <div>\r\n                    <Form onSubmit={handleSubmit} className=\"container-form\">\r\n                        {/* <div className=\"container\"> */}\r\n                        <div className=\"name\">\r\n                            <h6>Old Name: {props.task.name}</h6>\r\n                            <div>\r\n                                <Field\r\n                                    className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    // component={renderText}\r\n                                    component=\"input\"\r\n                                    // type=\"text\"\r\n                                    placeholder=\"First Name\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"level\">\r\n                            <h6>Old Level: {level(props.task.level)}</h6>\r\n\r\n                            <div>\r\n                                <Field\r\n                                    name=\"level\"\r\n                                    // component=\"select\"\r\n                                    component={renderSelect}\r\n                                ></Field>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"action\">\r\n                            <div className=\"button-form text-center  \">\r\n                                <ButtonGroup\r\n                                    aria-label=\"Basic example\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        height: \"100%\",\r\n                                    }}\r\n                                >\r\n                                    <Button variant=\"warning\" type=\"submit\">\r\n                                        Done\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        onClick={() => {\r\n                                            props.onClose();\r\n                                        }}\r\n                                    >\r\n                                        Cancel\r\n                                    </Button>\r\n                                    {/* <Button variant=\"secondary\">Right</Button> */}\r\n                                </ButtonGroup>\r\n                            </div>\r\n                        </div>\r\n                        {/* </div> */}\r\n                    </Form>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleEdit: () => {\r\n            dispatch(Action.toggleEdit());\r\n        },\r\n    };\r\n};\r\n\r\nconst validate = (values) => {\r\n    const err = {};\r\n    if (!values.name) {\r\n        err.name = \"Required\";\r\n    }\r\n    if (!values.level) {\r\n        err.name = \"Required\";\r\n    }\r\n};\r\n\r\nEditForm = reduxForm({\r\n    // a unique name for the form\r\n    form: \"row\",\r\n})(EditForm);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);\r\n"]},"metadata":{},"sourceType":"module"}
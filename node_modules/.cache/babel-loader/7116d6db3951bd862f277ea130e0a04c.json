{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\SignInSignUpRouter.js\";\nimport React from \"react\";\nimport \"../Css/index.css\";\nimport * as URL from \"../Const/URL\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { Nav, Row, Col, Badge, Container } from \"react-bootstrap\";\nimport { SubmissionError } from \"redux-form\";\nimport Login from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport { connect } from \"react-redux\";\nimport * as Action from \"../Actions/index\";\n\nfunction SignInSignUpRouter(props) {\n  function signup(values) {\n    console.log(values.Password);\n    return fetch(URL.URL_SIGNUP, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Username: values.Username,\n        Password: values.Password,\n        Email: values.Email\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n\n      if (response.status === 400) {\n        throw new SubmissionError(response.errors);\n      } else {\n        return alert(\"Đăng Kí Thành Công\");\n      }\n    });\n  }\n\n  function getTask() {\n    fetch(URL.URL_API).then(response => response.json()).catch(e => {\n      console.log(\"Err\", e);\n    }).then(data => {\n      // console.log(data);\n      localStorage.setItem(\"Tasks\", JSON.stringify(data)); // Cookies.set(\"Task\", data);\n      // console.log(localStorage.getItem(\"Tasks\"));\n    }).then(() => props.resetTask()); // .then(() =>\n    //     console.log(getCookie(\".AspNetCore.Identity.Application\"))\n    // );\n  }\n\n  async function login(values) {\n    return fetch(URL.URL_LOGIN, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        Username: values.Username,\n        Password: values.Password\n      })\n    }).then(response => {\n      // console.log(\"response\", response);\n      if (response.ok) return response;else return response.json();\n    }).then(response => {\n      // console.log(response);\n      if (response === true || response.ok) {\n        getTask();\n        props.toggleLogin(); // throw new Error(\"Sai Thông Tin\");\n      } else if (response.status === 400) {\n        // console.log(response);\n        throw new SubmissionError(response.errors);\n      } else if (response === false) {\n        alert(\"Sai Thông Tin\");\n      }\n    }); // .then(() => getTask())\n    // .then(() => props.toggleLogin());\n  }\n\n  return (\n    /*#__PURE__*/\n    // align-items-center\n    React.createElement(Container, {\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center h-100 \",\n      style: {\n        marginTop: \"5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      fill: true,\n      variant: \"tabs\",\n      className: \"justify-content-end  navbar-dark bg-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \"Login\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      to: \"/sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    }, \"Sign Up\"))))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\" // component={\n      //     <Login {...props} onSubmit={test}></Login>\n      // }\n      ,\n      render: props => {\n        return /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n          onSubmit: login,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 41\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-in\" // component={Login}\n      ,\n      render: props => {\n        return /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n          onSubmit: login,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 41\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/sign-up\" // component={SignUp}\n      ,\n      render: props => {\n        return /*#__PURE__*/React.createElement(SignUp, Object.assign({}, props, {\n          onSubmit: signup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 41\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }))))))\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleLogin: () => {\n      dispatch(Action.toggleLogin());\n    },\n    resetTask: () => {\n      dispatch(Action.resetTask());\n    } // submitform: () => {\n    //     dispatch(submit(\"row\"));\n    // },\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInSignUpRouter);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/SignInSignUpRouter.js"],"names":["React","URL","BrowserRouter","Router","Switch","Route","Link","Redirect","Nav","Row","Col","Badge","Container","SubmissionError","Login","SignUp","connect","Action","SignInSignUpRouter","props","signup","values","console","log","Password","fetch","URL_SIGNUP","method","headers","Accept","body","JSON","stringify","Username","Email","then","response","json","status","errors","alert","getTask","URL_API","catch","e","data","localStorage","setItem","resetTask","login","URL_LOGIN","ok","toggleLogin","marginTop","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../Css/index.css\";\r\nimport * as URL from \"../Const/URL\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { Nav, Row, Col, Badge, Container } from \"react-bootstrap\";\r\nimport { SubmissionError } from \"redux-form\";\r\n\r\nimport Login from \"./SignIn\";\r\nimport SignUp from \"./SignUp\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Action from \"../Actions/index\";\r\n\r\nfunction SignInSignUpRouter(props) {\r\n    function signup(values) {\r\n        console.log(values.Password);\r\n        return fetch(URL.URL_SIGNUP, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                Username: values.Username,\r\n                Password: values.Password,\r\n                Email: values.Email,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                if (response.status === 400) {\r\n                    throw new SubmissionError(response.errors);\r\n                } else {\r\n                    return alert(\"Đăng Kí Thành Công\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function getTask() {\r\n        fetch(URL.URL_API)\r\n            .then((response) => response.json())\r\n            .catch((e) => {\r\n                console.log(\"Err\", e);\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n                localStorage.setItem(\"Tasks\", JSON.stringify(data));\r\n                // Cookies.set(\"Task\", data);\r\n                // console.log(localStorage.getItem(\"Tasks\"));\r\n            })\r\n            .then(() => props.resetTask());\r\n        // .then(() =>\r\n        //     console.log(getCookie(\".AspNetCore.Identity.Application\"))\r\n        // );\r\n    }\r\n\r\n    async function login(values) {\r\n        return fetch(URL.URL_LOGIN, {\r\n            method: \"POST\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                Username: values.Username,\r\n                Password: values.Password,\r\n            }),\r\n        })\r\n            .then((response) => {\r\n                // console.log(\"response\", response);\r\n                if (response.ok) return response;\r\n                else return response.json();\r\n            })\r\n            .then((response) => {\r\n                // console.log(response);\r\n                if (response === true || response.ok) {\r\n                    getTask();\r\n                    props.toggleLogin();\r\n\r\n                    // throw new Error(\"Sai Thông Tin\");\r\n                } else if (response.status === 400) {\r\n                    // console.log(response);\r\n                    throw new SubmissionError(response.errors);\r\n                } else if (response === false) {\r\n                    alert(\"Sai Thông Tin\");\r\n                }\r\n            });\r\n        // .then(() => getTask())\r\n        // .then(() => props.toggleLogin());\r\n    }\r\n    return (\r\n        // align-items-center\r\n        <Container className=\"h-100\">\r\n            <Row\r\n                className=\"justify-content-center h-100 \"\r\n                style={{ marginTop: \"5rem\" }}\r\n            >\r\n                <Col md={6}>\r\n                    <Router>\r\n                        <Nav\r\n                            fill\r\n                            variant=\"tabs\"\r\n                            className=\"justify-content-end  navbar-dark bg-dark\"\r\n                        >\r\n                            <Nav.Item>\r\n                                {\" \"}\r\n                                <Link className=\"nav-link\" to={\"/sign-in\"}>\r\n                                    <h3>\r\n                                        <Badge variant=\"dark\">Login</Badge>\r\n                                    </h3>\r\n                                </Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Link className=\"nav-link\" to={\"/sign-up\"}>\r\n                                    <h3>\r\n                                        <Badge variant=\"dark\">Sign Up</Badge>\r\n                                    </h3>\r\n                                </Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n\r\n                        <Switch>\r\n                            <Route\r\n                                exact\r\n                                path=\"/\"\r\n                                // component={\r\n                                //     <Login {...props} onSubmit={test}></Login>\r\n                                // }\r\n                                render={(props) => {\r\n                                    return (\r\n                                        <Login\r\n                                            {...props}\r\n                                            onSubmit={login}\r\n                                        ></Login>\r\n                                    );\r\n                                }}\r\n                            />\r\n                            <Route\r\n                                path=\"/sign-in\"\r\n                                // component={Login}\r\n                                render={(props) => {\r\n                                    return (\r\n                                        <Login\r\n                                            {...props}\r\n                                            onSubmit={login}\r\n                                        ></Login>\r\n                                    );\r\n                                }}\r\n                            />\r\n                            <Route\r\n                                path=\"/sign-up\"\r\n                                // component={SignUp}\r\n                                render={(props) => {\r\n                                    return (\r\n                                        <SignUp\r\n                                            {...props}\r\n                                            onSubmit={signup}\r\n                                        ></SignUp>\r\n                                    );\r\n                                }}\r\n                            />\r\n                        </Switch>\r\n                    </Router>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleLogin: () => {\r\n            dispatch(Action.toggleLogin());\r\n        },\r\n        resetTask: () => {\r\n            dispatch(Action.resetTask());\r\n        },\r\n\r\n        // submitform: () => {\r\n        //     dispatch(submit(\"row\"));\r\n        // },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInSignUpRouter);\r\n"]},"metadata":{},"sourceType":"module"}
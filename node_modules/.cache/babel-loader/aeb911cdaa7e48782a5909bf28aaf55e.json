{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\Component\\\\ChatGroup.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Chatbox.css\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport * as Action from \"../Actions/index\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nexport const ChatGroup = props => {\n  // useEffect(() => {\n  //     fetch(URL.URL_GETUSERNAME, { method: \"GET\" })\n  //         .then((Response) => Response.json())\n  //         .then((data) => {\n  //             console.log(data);\n  //             props.updateUser(data);\n  //         });\n  // });\n  function test(e) {\n    console.log(e.target.value);\n  }\n\n  const list = props.listUser.map((username, index) => {\n    if (username !== props.username.username) return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: index,\n      className: \"mb-2\",\n      onClick: test // as={<Button></Button>}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      variant: \"outline-light\",\n      onClick: () => props.updateUserChatWith(username),\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, username));\n  });\n  return /*#__PURE__*/React.createElement(Col, {\n    className: \"chat\",\n    md: {\n      span: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card_chatbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \" msg_card_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"contacts_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, list))), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  listUser: state.ListUser,\n  username: state.LoginUserName\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUserChatWith: username => {\n      dispatch(Action.updateUserChatWith(username));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatGroup);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Component/ChatGroup.js"],"names":["React","connect","ListGroup","Card","Col","Action","Badge","Button","ChatGroup","props","test","e","console","log","target","value","list","listUser","map","username","index","updateUserChatWith","span","mapStateToProps","state","ListUser","LoginUserName","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAASC,IAAT,CAAcC,CAAd,EAAiB;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACH;;AACD,QAAMC,IAAI,GAAGP,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD,QAAID,QAAQ,KAAKV,KAAK,CAACU,QAAN,CAAeA,QAAhC,EACI,oBACI,oBAAC,SAAD,CAAW,IAAX;AACI,MAAA,GAAG,EAAEC,KADT;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,OAAO,EAAEV,IAHb,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,OAAO,EAAC,eAFZ;AAGI,MAAA,OAAO,EAAE,MAAMD,KAAK,CAACY,kBAAN,CAAyBF,QAAzB,CAHnB;AAII,MAAA,SAAS,EAAC,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBKA,QAjBL,CANJ,CADJ;AA6BP,GA/BY,CAAb;AAgCA,sBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCN,IAAtC,CADJ,CAFJ,CADJ,eAOI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH,CAvDM;;AAyDP,MAAMO,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,QAAQ,EAAEO,KAAK,CAACC,QADgB;AAEhCN,EAAAA,QAAQ,EAAEK,KAAK,CAACE;AAFgB,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHP,IAAAA,kBAAkB,EAAGF,QAAD,IAAc;AAC9BS,MAAAA,QAAQ,CAACvB,MAAM,CAACgB,kBAAP,CAA0BF,QAA1B,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAelB,OAAO,CAACsB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,SAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../Chatbox.css\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport * as Action from \"../Actions/index\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nexport const ChatGroup = (props) => {\r\n    // useEffect(() => {\r\n    //     fetch(URL.URL_GETUSERNAME, { method: \"GET\" })\r\n    //         .then((Response) => Response.json())\r\n    //         .then((data) => {\r\n    //             console.log(data);\r\n    //             props.updateUser(data);\r\n    //         });\r\n    // });\r\n    function test(e) {\r\n        console.log(e.target.value);\r\n    }\r\n    const list = props.listUser.map((username, index) => {\r\n        if (username !== props.username.username)\r\n            return (\r\n                <ListGroup.Item\r\n                    key={index}\r\n                    className=\"mb-2\"\r\n                    onClick={test}\r\n                    // as={<Button></Button>}\r\n                >\r\n                    <Button\r\n                        block\r\n                        variant=\"outline-light\"\r\n                        onClick={() => props.updateUserChatWith(username)}\r\n                        className=\"text-center\"\r\n                    >\r\n                        {/* <div className=\"d-flex bd-highlight\">\r\n                        <div className=\"user_info\">\r\n                            <Badge variant=\"info\" style={{ width: \"100%\" }}>\r\n                                {username}\r\n                            </Badge>\r\n                        </div>\r\n                    </div> */}\r\n                        {/* <Badge\r\n                            variant=\"light\"\r\n                            style={{ width: \"100%\", fontSize: \"100%\" }}\r\n                        > */}\r\n                        {username}\r\n                        {/* </Badge> */}\r\n                    </Button>\r\n                </ListGroup.Item>\r\n            );\r\n    });\r\n    return (\r\n        <Col className=\"chat\" md={{ span: 4 }}>\r\n            <Card className=\"card_chatbox\">\r\n                <Card.Header></Card.Header>\r\n                <Card.Body className=\" msg_card_body\">\r\n                    <ListGroup className=\"contacts_body\">{list}</ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card.Footer></Card.Footer>\r\n        </Col>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    listUser: state.ListUser,\r\n    username: state.LoginUserName,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateUserChatWith: (username) => {\r\n            dispatch(Action.updateUserChatWith(username));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatGroup);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\H\\u1ECDc T\\u1EADp\\\\React-Redux\\\\react-app\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport * as Action from \"./Actions/index\";\nimport * as URL from \"./Const/URL\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport TaskTable from \"./Component/TaskTable\";\nimport ShowChartButton from \"./Component/ShowChartButton\";\nimport AddTaskReduxForm from \"./Component/AddTaskReduxForm\";\nimport Chart from \"./Component/Chart\";\nimport { connect } from \"react-redux\";\nimport SignInSignUpRouter from \"./Component/SignInSignUpRouter\";\nimport AppNavbar from \"./Component/AppNavbar\";\nimport { Badge } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.AddTask = this.AddTask.bind(this);\n    this.checkLogin = this.checkLogin.bind(this);\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  async AddTask(Values) {\n    console.log(Values);\n    let tl = JSON.parse(localStorage.getItem(\"Tasks\"));\n    let lastTask = tl[tl.length - 1];\n    this.props.addTaskAction({\n      id: parseInt(lastTask.id + 1),\n      name: Values.name,\n      level: parseInt(Values.level)\n    });\n    this.props.closeFormAction();\n    await this.sleep(750);\n    this.props.updateChart();\n  }\n\n  checkLogin() {\n    fetch(URL.URL_CHECK_LOGIN, {\n      method: \"GET\"\n    }).then(Response => Response.json()).then(data => {\n      if (data.userName === null) {\n        this.props.NotLogin();\n      } else {\n        // this.props.updateUser(data.userName);\n        this.props.IsLogin();\n      }\n    });\n  }\n\n  logout() {\n    fetch(URL.URL_LOGOUT, {\n      method: \"GET\"\n    }).then(Response => Response.json()).then(data => {\n      // console.log(data);\n      // console.log(data.isCompleted);\n      if (data.isCompleted) {\n        this.props.NotLogin();\n      }\n    });\n  }\n\n  UNSAFE_componentWillMount() {\n    console.log(\"UNSAFE_componentWillMount\");\n    this.checkLogin();\n  }\n\n  render() {\n    console.log(\"render App\");\n\n    if (this.props.showForm) {\n      // console.log(\"d\");\n      var form = /*#__PURE__*/React.createElement(AddTaskReduxForm, {\n        form: \"AddForm\",\n        onSubmit: this.AddTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      });\n    } else form = null;\n\n    if (this.props.showChart) {\n      var chart = /*#__PURE__*/React.createElement(Chart, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \" \");\n    } else chart = null;\n\n    if (this.props.isLogin) {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppNavbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(SortDropDown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ShowChartButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(AddTaskButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, form), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          backgroundColor: \"#1b262c\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \"1rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, chart), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TaskTable, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      })));\n    } else if (!this.props.isLogin) return /*#__PURE__*/React.createElement(SignInSignUpRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 20\n      }\n    });\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    addTaskAction: task => {\n      dispatch(Action.addTask(task));\n    },\n    closeFormAction: () => {\n      dispatch(Action.closeForm());\n    },\n    setNewTask: task => {\n      dispatch(Action.setNewTask(task));\n    },\n    updateChart: () => {\n      dispatch(Action.resetChart());\n    },\n    ToggleLogin: () => {\n      dispatch(Action.toggleLogin());\n    },\n    IsLogin: () => {\n      dispatch(Action.isLogin());\n    },\n    NotLogin: () => {\n      dispatch(Action.notLogin());\n    },\n    updateUser: username => {\n      dispatch(Action.updateUser(username));\n    }\n  };\n}\n\nconst mapStateToProps = state => ({\n  isLogin: state.IsLogin,\n  showForm: state.ToggleForm,\n  showChart: state.ToggleChart // userName: state.LoginUserName,\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/App.js"],"names":["React","Component","Container","Row","Search","SortDropDown","Action","URL","AddTaskButton","TaskTable","ShowChartButton","AddTaskReduxForm","Chart","connect","SignInSignUpRouter","AppNavbar","Badge","App","constructor","props","AddTask","bind","checkLogin","sleep","ms","Promise","resolve","setTimeout","Values","console","log","tl","JSON","parse","localStorage","getItem","lastTask","length","addTaskAction","id","parseInt","name","level","closeFormAction","updateChart","fetch","URL_CHECK_LOGIN","method","then","Response","json","data","userName","NotLogin","IsLogin","logout","URL_LOGOUT","isCompleted","UNSAFE_componentWillMount","render","showForm","form","showChart","chart","isLogin","backgroundColor","alignItems","justifyContent","margin","mapDispatchToProps","dispatch","task","addTask","closeForm","setNewTask","resetChart","ToggleLogin","toggleLogin","notLogin","updateUser","username","mapStateToProps","state","ToggleForm","ToggleChart"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Search from \"./Component/Search\";\nimport SortDropDown from \"./Component/SortDropDown\";\nimport * as Action from \"./Actions/index\";\nimport * as URL from \"./Const/URL\";\nimport AddTaskButton from \"./Component/AddTaskButton\";\nimport TaskTable from \"./Component/TaskTable\";\nimport ShowChartButton from \"./Component/ShowChartButton\";\nimport AddTaskReduxForm from \"./Component/AddTaskReduxForm\";\nimport Chart from \"./Component/Chart\";\nimport { connect } from \"react-redux\";\nimport SignInSignUpRouter from \"./Component/SignInSignUpRouter\";\nimport AppNavbar from \"./Component/AppNavbar\";\nimport { Badge } from \"react-bootstrap\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.AddTask = this.AddTask.bind(this);\n        this.checkLogin = this.checkLogin.bind(this);\n    }\n\n    sleep(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n    async AddTask(Values) {\n        console.log(Values);\n        let tl = JSON.parse(localStorage.getItem(\"Tasks\"));\n        let lastTask = tl[tl.length - 1];\n        this.props.addTaskAction({\n            id: parseInt(lastTask.id + 1),\n            name: Values.name,\n            level: parseInt(Values.level),\n        });\n        this.props.closeFormAction();\n        await this.sleep(750);\n        this.props.updateChart();\n    }\n    checkLogin() {\n        fetch(URL.URL_CHECK_LOGIN, {\n            method: \"GET\",\n        })\n            .then((Response) => Response.json())\n            .then((data) => {\n                if (data.userName === null) {\n                    this.props.NotLogin();\n                } else {\n                    // this.props.updateUser(data.userName);\n                    this.props.IsLogin();\n                }\n            });\n    }\n\n    logout() {\n        fetch(URL.URL_LOGOUT, {\n            method: \"GET\",\n        })\n            .then((Response) => Response.json())\n            .then((data) => {\n                // console.log(data);\n                // console.log(data.isCompleted);\n                if (data.isCompleted) {\n                    this.props.NotLogin();\n                }\n            });\n    }\n\n    UNSAFE_componentWillMount() {\n        console.log(\"UNSAFE_componentWillMount\");\n        this.checkLogin();\n    }\n\n    render() {\n        console.log(\"render App\");\n        if (this.props.showForm) {\n            // console.log(\"d\");\n            var form = (\n                <AddTaskReduxForm\n                    form=\"AddForm\"\n                    onSubmit={this.AddTask}\n                ></AddTaskReduxForm>\n            );\n        } else form = null;\n\n        if (this.props.showChart) {\n            var chart = <Chart> </Chart>;\n        } else chart = null;\n        if (this.props.isLogin) {\n            return (\n                <Container>\n                    {/* <Values form=\"row\" /> */}\n                    <AppNavbar></AppNavbar>\n\n                    <Row>\n                        <Search></Search>\n                        <SortDropDown></SortDropDown>\n                        <ShowChartButton></ShowChartButton>\n                        <AddTaskButton></AddTaskButton>\n                    </Row>\n\n                    <Row>{form}</Row>\n                    {/* <Chart> </Chart> */}\n                    <Row\n                        style={{\n                            backgroundColor: \"#1b262c\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            margin: \"1rem\",\n                        }}\n                    >\n                        {chart}\n                    </Row>\n                    <Row>\n                        <TaskTable></TaskTable>\n                    </Row>\n                </Container>\n            );\n        } else if (!this.props.isLogin)\n            return <SignInSignUpRouter></SignInSignUpRouter>;\n    }\n}\nfunction mapDispatchToProps(dispatch, props) {\n    return {\n        addTaskAction: (task) => {\n            dispatch(Action.addTask(task));\n        },\n        closeFormAction: () => {\n            dispatch(Action.closeForm());\n        },\n        setNewTask: (task) => {\n            dispatch(Action.setNewTask(task));\n        },\n        updateChart: () => {\n            dispatch(Action.resetChart());\n        },\n        ToggleLogin: () => {\n            dispatch(Action.toggleLogin());\n        },\n        IsLogin: () => {\n            dispatch(Action.isLogin());\n        },\n        NotLogin: () => {\n            dispatch(Action.notLogin());\n        },\n        updateUser: (username) => {\n            dispatch(Action.updateUser(username));\n        },\n    };\n}\nconst mapStateToProps = (state) => ({\n    isLogin: state.IsLogin,\n    showForm: state.ToggleForm,\n    showChart: state.ToggleChart,\n    // userName: state.LoginUserName,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
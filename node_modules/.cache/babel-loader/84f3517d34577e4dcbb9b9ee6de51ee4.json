{"ast":null,"code":"import * as TYPE from \"../Const/Types\";\nvar local = JSON.parse(localStorage.getItem(\"Tasks\"));\nconst lowCount = local.filter(task => {\n  return task.level === 1;\n}).length;\nconst mediumCount = local.filter(task => {\n  return task.level === 2;\n}).length;\nconst hightCount = local.filter(task => {\n  return task.level === 3;\n}).length;\nconst initialState = [{\n  name: \"Low Task\",\n  value: lowCount\n}, {\n  name: \"Medium Task\",\n  value: mediumCount\n}, {\n  name: \"High Task\",\n  value: hightCount\n}];\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case TYPE.UPDATE_CHART:\n      var local = JSON.parse(localStorage.getItem(\"Tasks\"));\n      const lowCount = local.filter(task => {\n        return task.level === 1;\n      }).length;\n      const mediumCount = local.filter(task => {\n        return task.level === 2;\n      }).length;\n      const hightCount = local.filter(task => {\n        return task.level === 3;\n      }).length;\n      const initialState = [{\n        name: \"Low Task\",\n        value: lowCount\n      }, {\n        name: \"Medium Task\",\n        value: mediumCount\n      }, {\n        name: \"High Task\",\n        value: hightCount\n      }];\n      return;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:/Học Tập/React-Redux/react-app/src/Reducer/ChartData.js"],"names":["TYPE","local","JSON","parse","localStorage","getItem","lowCount","filter","task","level","length","mediumCount","hightCount","initialState","name","value","state","action","type","UPDATE_CHART"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,gBAAtB;AAEA,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACpC,SAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,CAFgB,EAEdC,MAFH;AAGA,MAAMC,WAAW,GAAGV,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACvC,SAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,CAFmB,EAEjBC,MAFH;AAGA,MAAME,UAAU,GAAGX,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACtC,SAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,CAFkB,EAEhBC,MAFH;AAGA,MAAMG,YAAY,GAAG,CACjB;AAAEC,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,KAAK,EAAET;AAA3B,CADiB,EAEjB;AAAEQ,EAAAA,IAAI,EAAE,aAAR;AAAuBC,EAAAA,KAAK,EAAEJ;AAA9B,CAFiB,EAGjB;AAAEG,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAEH;AAA5B,CAHiB,CAArB;AAMA,gBAAe,CAACI,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,IAAI,CAACmB,YAAV;AACI,UAAIlB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACA,YAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACpC,eAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,OAFgB,EAEdC,MAFH;AAGA,YAAMC,WAAW,GAAGV,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACvC,eAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,OAFmB,EAEjBC,MAFH;AAGA,YAAME,UAAU,GAAGX,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAU;AACtC,eAAOA,IAAI,CAACC,KAAL,KAAe,CAAtB;AACH,OAFkB,EAEhBC,MAFH;AAGA,YAAMG,YAAY,GAAG,CACjB;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAET;AAA3B,OADiB,EAEjB;AAAEQ,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,KAAK,EAAEJ;AAA9B,OAFiB,EAGjB;AAAEG,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,KAAK,EAAEH;AAA5B,OAHiB,CAArB;AAKA;;AAEJ;AACI,aAAOI,KAAP;AApBR;AAsBH,CAvBD","sourcesContent":["import * as TYPE from \"../Const/Types\";\r\n\r\nvar local = JSON.parse(localStorage.getItem(\"Tasks\"));\r\nconst lowCount = local.filter((task) => {\r\n    return task.level === 1;\r\n}).length;\r\nconst mediumCount = local.filter((task) => {\r\n    return task.level === 2;\r\n}).length;\r\nconst hightCount = local.filter((task) => {\r\n    return task.level === 3;\r\n}).length;\r\nconst initialState = [\r\n    { name: \"Low Task\", value: lowCount },\r\n    { name: \"Medium Task\", value: mediumCount },\r\n    { name: \"High Task\", value: hightCount },\r\n];\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TYPE.UPDATE_CHART:\r\n            var local = JSON.parse(localStorage.getItem(\"Tasks\"));\r\n            const lowCount = local.filter((task) => {\r\n                return task.level === 1;\r\n            }).length;\r\n            const mediumCount = local.filter((task) => {\r\n                return task.level === 2;\r\n            }).length;\r\n            const hightCount = local.filter((task) => {\r\n                return task.level === 3;\r\n            }).length;\r\n            const initialState = [\r\n                { name: \"Low Task\", value: lowCount },\r\n                { name: \"Medium Task\", value: mediumCount },\r\n                { name: \"High Task\", value: hightCount },\r\n            ];\r\n            return;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}